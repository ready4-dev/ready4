[{"path":"https://ready4-dev.github.io/ready4/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://ready4-dev.github.io/ready4/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://ready4-dev.github.io/ready4/LICENSE.html","id":"0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://ready4-dev.github.io/ready4/LICENSE.html","id":"1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://ready4-dev.github.io/ready4/LICENSE.html","id":"2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://ready4-dev.github.io/ready4/LICENSE.html","id":"3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://ready4-dev.github.io/ready4/LICENSE.html","id":"4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://ready4-dev.github.io/ready4/LICENSE.html","id":"5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://ready4-dev.github.io/ready4/LICENSE.html","id":"6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://ready4-dev.github.io/ready4/LICENSE.html","id":"7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://ready4-dev.github.io/ready4/LICENSE.html","id":"8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://ready4-dev.github.io/ready4/LICENSE.html","id":"9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://ready4-dev.github.io/ready4/LICENSE.html","id":"10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://ready4-dev.github.io/ready4/LICENSE.html","id":"11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://ready4-dev.github.io/ready4/LICENSE.html","id":"12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://ready4-dev.github.io/ready4/LICENSE.html","id":"13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://ready4-dev.github.io/ready4/LICENSE.html","id":"14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://ready4-dev.github.io/ready4/LICENSE.html","id":"15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://ready4-dev.github.io/ready4/LICENSE.html","id":"16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://ready4-dev.github.io/ready4/LICENSE.html","id":"17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://ready4-dev.github.io/ready4/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://ready4-dev.github.io/ready4/articles/V_01.html","id":"motivation","dir":"Articles","previous_headings":"","what":"Motivation","title":"Develop Modular Computational Models Of Mental Health Systems","text":"One potentially attractive approach modelling complex mental health systems begin relatively simple computational model progressively extend scope sophistication. approach can aided linking multiple modelling projects (potentially different modelling groups) independently describe distinct aspects system modelled. phased collaborative approaches require individual project outputs readily integrate “modules”.","code":""},{"path":"https://ready4-dev.github.io/ready4/articles/V_01.html","id":"implementation","dir":"Articles","previous_headings":"","what":"Implementation","title":"Develop Modular Computational Models Of Mental Health Systems","text":"ready4 takes advantage encapsulation inheritance features Object Oriented Programming (OOP) support modular approaches development computational models mental health systems. ready4 framework uses two systems implementing OOP - S3 S4. -depth explanation R’s different class system beyond scope article, explored Hadley Wickham’s Advanced R handbook. However, useful know high level information S3 S4 classes: S4 classes frequently said “formal”, “strict” “rigorous”. elements S4 class called slots type data slot allowed contain specified class definition. S4 class can comprised slots contain different types data (e.g. slot contains character vector another slot contains tabular data). S3 classes often described “simple”, “informal” “flexible”. S3 objects attach attribute label base type objects (e.g. character vector, data.frame, list), turn used work methods applied class.","code":""},{"path":"https://ready4-dev.github.io/ready4/articles/V_01.html","id":"modules","dir":"Articles","previous_headings":"Implementation","what":"Modules","title":"Develop Modular Computational Models Of Mental Health Systems","text":"foundational element ready4 facilitates development modular computational models mental health systems Ready4Module class. can create instance (X) Ready4Module using following command. However, inspect X can see limited use contains data empty element called dissemination_1L_chr. Ready4Module class therefore intended called directly. Instead, purpose Ready4Module parent-class modules used ready4 framework. Ready4Module child-classes (ie ready4 framework modules) “S4” classes. ready4 Framework Concept formal (S4) Ready4Module child-class structures data use computational models mental health systems","code":"X <- ready4::Ready4Module() str(X) ## Formal class 'Ready4Module' [package \"ready4\"] with 1 slot ##   ..@ dissemination_1L_chr: chr NA"},{"path":"https://ready4-dev.github.io/ready4/articles/V_01.html","id":"ready4module-methods","dir":"Articles","previous_headings":"Implementation > Modules","what":"Ready4Module Methods","title":"Develop Modular Computational Models Of Mental Health Systems","text":"Modules ready4 Framework default inherit methods defined Ready4Module, can itemised using get_methods function. Currently, methods defined Ready4Module slot-methods.","code":"get_methods() ##  [1] \"authorSlot\"        \"characterizeSlot\"  \"depictSlot\"        ##  [4] \"enhanceSlot\"       \"exhibitSlot\"       \"ingestSlot\"        ##  [7] \"investigateSlot\"   \"manufactureSlot\"   \"metamorphoseSlot\"  ## [10] \"procureSlot\"       \"prognosticateSlot\" \"ratifySlot\"        ## [13] \"reckonSlot\"        \"renewSlot\"         \"shareSlot\""},{"path":"https://ready4-dev.github.io/ready4/articles/V_01.html","id":"specifying-dissemination-policies","dir":"Articles","previous_headings":"Implementation > Modules","what":"Specifying Dissemination Policies","title":"Develop Modular Computational Models Of Mental Health Systems","text":"ready4 includes two child classes Ready4Module. Ready4Public Ready4Private almost minimally informative parent (difference instances values “Public” “Private” assigned dissemination_1L_chr slot). Like Ready4Module class inherit , purpose Ready4Public Ready4Private used parent classes. data contained module can always shared publicly, may convenient note creating module child-class Ready4Public. Similarly, least data contained module always unsuitable public dissemination, can useful create module child Ready4Private. dissemination policy data contained module vary depending user context, module created direct child Ready4Module without using either Ready4Public Ready4Private. Users can define value using renewSlot method inspect dissemination policy procureSlot method.","code":"Y <- Ready4Public() str(Y) ## Formal class 'Ready4Public' [package \"ready4\"] with 1 slot ##   ..@ dissemination_1L_chr: chr \"Public\" Z <- Ready4Private() str(Z) ## Formal class 'Ready4Private' [package \"ready4\"] with 1 slot ##   ..@ dissemination_1L_chr: chr \"Private\" X <- renewSlot(X,                \"dissemination_1L_chr\",                \"Staff and students of research institutes\") procureSlot(X,             \"dissemination_1L_chr\") ## [1] \"Staff and students of research institutes\""},{"path":"https://ready4-dev.github.io/ready4/articles/V_01.html","id":"sub-modules","dir":"Articles","previous_headings":"Implementation","what":"Sub-modules","title":"Develop Modular Computational Models Of Mental Health Systems","text":"ready4 framework, S3 classes principally used help define structural properties slots ready4 framework modules methods can applied slots. S3 classes created purposes called sub-modules. ready4 Framework Concept informal (S3) class describes, validates assigns methods slot Ready4Module child-class.","code":""},{"path":"https://ready4-dev.github.io/ready4/articles/V_01.html","id":"finding-modules-and-sub-modules","dir":"Articles","previous_headings":"","what":"Finding Modules and Sub-Modules","title":"Develop Modular Computational Models Of Mental Health Systems","text":"table currently available ready4 framework modules (S4 classes) sub-modules (S3 classes) can generated using make_modules_tb.","code":"a <- make_modules_tb()"},{"path":"https://ready4-dev.github.io/ready4/articles/V_01.html","id":"current-ready4-framework-modules","dir":"Articles","previous_headings":"Finding Modules and Sub-Modules","what":"Current ready4 Framework Modules","title":"Develop Modular Computational Models Of Mental Health Systems","text":"HTML versions table can printed using print_modules function. display table ready4 framework modules, supply value “S4” what_1L_chr argument.","code":"print_modules(a,               what_1L_chr = \"S4\")"},{"path":"https://ready4-dev.github.io/ready4/articles/V_01.html","id":"current-ready4-framework-sub-modules","dir":"Articles","previous_headings":"Finding Modules and Sub-Modules","what":"Current ready4 Framework Sub-Modules","title":"Develop Modular Computational Models Of Mental Health Systems","text":"display table ready4 framework sub-modules , supply value “S3” what_1L_chr argument.","code":"print_modules(a,               what_1L_chr = \"S3\")"},{"path":"https://ready4-dev.github.io/ready4/articles/V_01.html","id":"authoring-ready4-framework-modules-and-sub-modules","dir":"Articles","previous_headings":"","what":"Authoring ready4 Framework Modules and Sub-Modules","title":"Develop Modular Computational Models Of Mental Health Systems","text":"R provides array potential approaches creating documenting S3 S4 classes. However, standardisation important enabler modular approaches computational model development, ready4 framework modules sub-modules authored using workflow.","code":""},{"path":"https://ready4-dev.github.io/ready4/articles/V_02.html","id":"motivation","dir":"Articles","previous_headings":"","what":"Motivation","title":"Use A Simple And Consistent Syntax In Computational Models Of Mental Health Systems","text":"Transparency one underpinning principles open science. One way improve transparency computational models mental health systems ensure programs implementing models can meaningfully inspected readers different levels technical expertise. Even non-technical readers able follow high-level logic implemented model algorithms. Consistent use simple programming syntax main programS implementing analyses can help ensure readers need contend relatively new concepts reviewing code.","code":""},{"path":"https://ready4-dev.github.io/ready4/articles/V_02.html","id":"implementation","dir":"Articles","previous_headings":"","what":"Implementation","title":"Use A Simple And Consistent Syntax In Computational Models Of Mental Health Systems","text":"ready4 provides simple syntax can consistently applied across multiple types mental health computational modelling projects. taking advantage polymorphism abstraction features Object Oriented Programing R’s use generic functions. Generic functions don’t obviously anything - salient features name high level description type task method using name perform. Whenever method defined classes use R’s S4 S3 systems (types used ready4 framework modules sub-modules), assigned generic best match algorithm implements.","code":""},{"path":"https://ready4-dev.github.io/ready4/articles/V_02.html","id":"finding-ready4-framework-methods","dir":"Articles","previous_headings":"Implementation","what":"Finding ready4 Framework Methods","title":"Use A Simple And Consistent Syntax In Computational Models Of Mental Health Systems","text":"generate table summarises syntax used implement ready4 methods, use make_methods_tb function.","code":"x <- make_methods_tb()"},{"path":"https://ready4-dev.github.io/ready4/articles/V_02.html","id":"core-generics","dir":"Articles","previous_headings":"Implementation > Finding ready4 Framework Methods","what":"Core generics","title":"Use A Simple And Consistent Syntax In Computational Models Of Mental Health Systems","text":"ready4 includes number core generic functions describe main types method implemented ready4 framework. Notably, ready4 package define methods core generics. Instead, methods defined generics R packages extend ready4 framework. HTML table core generics bundled ready4 examples methods implement generic can displayed using print_methods function, using return_1L_chr = \"core\" argument.","code":"print_methods(x,               return_1L_chr = \"core\")"},{"path":"https://ready4-dev.github.io/ready4/articles/V_02.html","id":"slot-generics-and-methods","dir":"Articles","previous_headings":"Implementation > Finding ready4 Framework Methods","what":"Slot generics and methods","title":"Use A Simple And Consistent Syntax In Computational Models Of Mental Health Systems","text":"“core” generics also “slot” version, use applying core method specified slot class. ready4 package defines methods “slot” generics Ready4Module class. Two “slot” methods can also used additional purposes: procureSlot “getter” method - default behaviour return value specified slot. argument use_procure_mthd_1L_lgl = T included method call, procureSlot instead apply procure method specified slot. renewSlot “setter” method - value “use_renew_mthd” (default) passed new_val_xx argument, value assigned specified slot. HTML table slot generics bundled ready4 can displayed using print_methods function, using return_1L_chr = \"slot\" argument.","code":"print_methods(x,               return_1L_chr = \"slot\")"},{"path":"https://ready4-dev.github.io/ready4/articles/V_02.html","id":"extended-author-generics","dir":"Articles","previous_headings":"Implementation > Finding ready4 Framework Methods","what":"Extended author generics","title":"Use A Simple And Consistent Syntax In Computational Models Of Mental Health Systems","text":"Finally, small number generics general extensions core functions. Currently, extended generics variants author generics, specifying type output authored method. ready4 package include methods extended generics. HTML table extended generics bundled ready4 can displayed using print_methods function, using return_1L_chr = \"extended\" argument.","code":"print_methods(x,               exclude_mthds_for_chr = \"Ready4Module\",               return_1L_chr = \"extended\")"},{"path":"https://ready4-dev.github.io/ready4/articles/V_03.html","id":"motivation","dir":"Articles","previous_headings":"","what":"Motivation","title":"Apply An Object-Oriented Paradigm To Computational Models Of Mental Health Systems","text":"practical utility ease use computational models mental health systems part shaped choice programming paradigm used develop . ready4 framework adopts object oriented programming (OOP) paradigm practice means framework principally consists classes (representations data structures useful modelling mental health systems) methods (algorithms can applied data-structures generate insight useful policy-making). OOP approach particular useful developing computational models mental health systems modular transparent.","code":""},{"path":[]},{"path":"https://ready4-dev.github.io/ready4/articles/V_03.html","id":"modular-computational-models","dir":"Articles","previous_headings":"Implementation","what":"Modular Computational Models","title":"Apply An Object-Oriented Paradigm To Computational Models Of Mental Health Systems","text":"Two commonly noted features OOP - encapsulation inheritance particularly useful developing modular computational models.","code":""},{"path":"https://ready4-dev.github.io/ready4/articles/V_03.html","id":"encapsulation","dir":"Articles","previous_headings":"Implementation > Modular Computational Models","what":"Encapsulation","title":"Apply An Object-Oriented Paradigm To Computational Models Of Mental Health Systems","text":"Encapsulation allows us define data structures (“classes”) used computational modelling projects manner allows safely combined. example, assume two computational models, one () focused predicting types intensity services used individuals present mental health services (B) predicts outcomes recipients services. may desirable develop new model (C) combines B model service use outcomes. Using encapsulated code allows features functionality can made available B manner protects integrity . Specifically, B can interact using algorithms (“methods”) already defined . Furthermore, appropriately implemented, methods associated class work combination input values can encapsulated class - making computational models generalisabe. example, imagine class (X) used structure summary data relevant mental health systems. Methods associated X (e.g. method derive unmet need statistic) can applied two instances X - one containing data relevant Australian context one data UK context.","code":""},{"path":"https://ready4-dev.github.io/ready4/articles/V_03.html","id":"inheritence","dir":"Articles","previous_headings":"Implementation > Modular Computational Models","what":"Inheritence","title":"Apply An Object-Oriented Paradigm To Computational Models Of Mental Health Systems","text":"examples highlighted previous section potential limitations. developers didn’t define methods allow B interact desired way? number differences Australian UK system need accounted generalising method former latter? types issues can addressed another key feature OOP - inheritance. Inheritance allows “child” class created “parent” class. default, “child” inherits features “parent” including methods associated “parent” class. Importantly however, alternative additional features can also specified “child” allow implement different methods necessary. example, developing new computational model C create number new classes children classes defined . can define additional/alternative methods classes overcome integration issues classes methods B. way, can enjoy best worlds - leveraging relevant algorithms B (need re-invent wheel), ensuring transparently develop additional code required C. approach also ensures respective contributions (potentially different) authorship teams behind , B C clearer. Similarly, inheritance allow re-use much code model Australian mental health system exploring similar topics within UK context, making straightforward develop additional code addresses relevant divergence features two jurisdictions. practical terms, mean developing two child classes X - class Y use Australian data class Z use UK system. methods specific particular jurisdiction defined X inherited Y Z. Methods appropriate use Australian context defined Y, UK specific methods defined Z.","code":""},{"path":"https://ready4-dev.github.io/ready4/articles/V_03.html","id":"transparent-computational-models","dir":"Articles","previous_headings":"Implementation","what":"Transparent Computational Models","title":"Apply An Object-Oriented Paradigm To Computational Models Of Mental Health Systems","text":"make computational models mental health systems readily understood, ready4 framework supports use simple consistent syntax makes programs easier read understand. simplified approaches facilitated two commonly noted features OOP - polymorphism abstraction.","code":""},{"path":"https://ready4-dev.github.io/ready4/articles/V_03.html","id":"polymorphism","dir":"Articles","previous_headings":"Implementation > Transparent Computational Models","what":"Polymorphism","title":"Apply An Object-Oriented Paradigm To Computational Models Of Mental Health Systems","text":"Polymorphism allows similar concepts represented using consistent syntax. top level code can therefore generalised multiple model implementations, making algorithms simpler understand easier re-use. Returning previous example, exact command (e.g. call method exhibit) can applied Y (used Australian data) Z (used UK data). However, algorithm implemented command can vary based class method applied (ie different algorithm applied data specified UK compared specified Australian).","code":""},{"path":"https://ready4-dev.github.io/ready4/articles/V_03.html","id":"abstraction","dir":"Articles","previous_headings":"Implementation > Transparent Computational Models","what":"Abstraction","title":"Apply An Object-Oriented Paradigm To Computational Models Of Mental Health Systems","text":"simplicity enabled polymorphism enhanced Abstraction, basically means briefest easiest comprehend parts code exposed default potential users. instance class created, entire program ingest model data, analyse produce scientific summary can represented brief lines code, readily comprehensible non-coders. using open source languages, elegance simplicity abstraction restrict ability technically minded users exploring detailed workings underpinning code.","code":""},{"path":"https://ready4-dev.github.io/ready4/articles/V_04.html","id":"motivation","dir":"Articles","previous_headings":"","what":"Motivation","title":"Apply And Extend The Ready4 Framework With Code Libraries, Datasets and Literate Programs","text":"ready4 package provides “bare-bones” framework designed extended work. vignette briefly summarises examples current extensions framework.","code":""},{"path":"https://ready4-dev.github.io/ready4/articles/V_04.html","id":"implementation","dir":"Articles","previous_headings":"","what":"Implementation","title":"Apply And Extend The Ready4 Framework With Code Libraries, Datasets and Literate Programs","text":"three types tools available implement ready4 framework code libraries, datasets literate programs.","code":""},{"path":"https://ready4-dev.github.io/ready4/articles/V_04.html","id":"code-libraries-r-packages","dir":"Articles","previous_headings":"Implementation","what":"Code libraries (R packages)","title":"Apply And Extend The Ready4 Framework With Code Libraries, Datasets and Literate Programs","text":"ready4 framework classes methods (well underpinning code helps implement ) organised distributed code libraries. Code libraries collections pre-written code can flexibly combined perform multiple different tasks. R language ready4 framework implemented, code library frequently called “package”.","code":""},{"path":"https://ready4-dev.github.io/ready4/articles/V_04.html","id":"current-ready4-framework-code-libraries","dir":"Articles","previous_headings":"Implementation > Code libraries (R packages)","what":"Current ready4 framework code libraries","title":"Apply And Extend The Ready4 Framework With Code Libraries, Datasets and Literate Programs","text":"addition foundational ready4 package, currently four types ready4 framework code library: libraries support standardised workflows authoring extensions ready4 framework; libraries ready4 framework classes methods describing pre-processing model data; libraries ready4 framework classes methods model specification, testing implementation; libraries ready4 framework classes methods applying models make predictions relevant mental health systems. Different copies ready4 code libraries stored different types code respository. Development versions ready4 code libraries stored sub-directories ready4-dev GitHub organisation. Development code date public version code. latest version, development code may fully documented tested. also prone changes implemented without notice (including, potentially, deletion entire development repository - reason, GitHub code repositories cited peer-reviewed publications). Production versions ready4 code libraries submitted Comprehensive R-Archive Network (CRAN). Currently, ready4 code library submitted CRAN, process expected begin late 2022. Production versions released CRAN authors believe sufficient testing documenting undertaken meet’s CRAN’s quality assurance requirements. Hosting CRAN also indicates code library subject light peer-review CRAN volunteers. Production code (available) version recommended intended users code-library. Archive versions ready4 code libraries permanent copies ready4 code libraries stored Zenodo accessible ready4’s Zenodo community page. Multiple copies code library - capturing evolution code different points lifecycle - can archived, copy assigned DOI. Archived code appropriate type cite peer-reviewed publications. table date list R package extensions ready4 framework can generated using make_libraries_tb function. noted addition information citing code library, documentation library consists website (normally first resource visited prior installing software) two versions PDF manual (brief version suitable users longer version aimed developers). HTML version table can printed using print_pkg_extensions.","code":"x <- make_libraries_tb() print_packages(x)"},{"path":"https://ready4-dev.github.io/ready4/articles/V_04.html","id":"authoring-ready4-framework-code-libraries","dir":"Articles","previous_headings":"Implementation > Code libraries (R packages)","what":"Authoring ready4 framework code libraries","title":"Apply And Extend The Ready4 Framework With Code Libraries, Datasets and Literate Programs","text":"ready4 provides framework modular development computational models mental health systems, developers framework extensions expected adopt common set standards. standardised workflow authoring code libraries (R packages) extend ready4 framework supported ready4pack package.","code":""},{"path":"https://ready4-dev.github.io/ready4/articles/V_04.html","id":"datasets","dir":"Articles","previous_headings":"Implementation","what":"Datasets","title":"Apply And Extend The Ready4 Framework With Code Libraries, Datasets and Literate Programs","text":"undertake analysis, ready4 framework classes methods need applied data. ready4 open-science framework, greatest extent feasible, encouraged share analysis data (input output) via online data repositories.","code":""},{"path":"https://ready4-dev.github.io/ready4/articles/V_04.html","id":"current-ready4-framework-datasets","dir":"Articles","previous_headings":"Implementation > Datasets","what":"Current ready4 framework datasets","title":"Apply And Extend The Ready4 Framework With Code Libraries, Datasets and Literate Programs","text":"two types data repository currently supported ready4 framework: Citable, permanent copies data stored ready4’s corner Harvard Dataverse. Working copies data required operation documentation ready4 framework hosted GitHub Releases relevant code-library’s sub-directory ready4-dev GitHub organisation. summary table currently publicly available data stored ready4’s Dataverses can generated using make_dvs_tb function. HTML version table can displayed using print_dvs. Additional detail datasets listed “Datasets” column previous table can generated using print_dss function. wish exclude datasets fake data generated illustration purposes can supply what_1L_chr = \"real\". can also inspect fake data.","code":"y <- make_dvs_tb() print_dvs(y) print_dss(y,           what_1L_chr = \"real\") print_dss(y,           what_1L_chr = \"fakes\")"},{"path":"https://ready4-dev.github.io/ready4/articles/V_04.html","id":"authoring-ready4-framework-datasets","dir":"Articles","previous_headings":"Implementation > Datasets","what":"Authoring ready4 framework datasets","title":"Apply And Extend The Ready4 Framework With Code Libraries, Datasets and Literate Programs","text":"author ready4 framework datasets, standardised workflow, supported ready4use package, recommended.","code":""},{"path":"https://ready4-dev.github.io/ready4/articles/V_04.html","id":"literate-programs","dir":"Articles","previous_headings":"Implementation","what":"Literate programs","title":"Apply And Extend The Ready4 Framework With Code Libraries, Datasets and Literate Programs","text":"Model algorithms (classes methods code libraries) data (datasets) connected one another via program. Unlike constituent parts, programs intended perform one task . multiple ways write programs, one popular method particularly relevant open science projects called literate programming. Literate Programming, program structured logic can naturally understood humans section logic explained including words language English.","code":""},{"path":"https://ready4-dev.github.io/ready4/articles/V_04.html","id":"finding-ready4-framework-literate-programs","dir":"Articles","previous_headings":"Implementation > Literate programs","what":"Finding ready4 framework literate programs","title":"Apply And Extend The Ready4 Framework With Code Libraries, Datasets and Literate Programs","text":"Currently, main source examples ready4 framework literate programs vignette articles code libraries. HTML table summarising literate programs can generated applying print_vignettes function output (x) prior call make_libraries_tb function. table includes links HTML version (reading - displays program outputs) RMD version (input can executed R) literate program.","code":"print_vignettes(x)"},{"path":"https://ready4-dev.github.io/ready4/articles/V_04.html","id":"authoring-ready4-framework-literate-programs","dir":"Articles","previous_headings":"Implementation > Literate programs","what":"Authoring ready4 framework literate programs","title":"Apply And Extend The Ready4 Framework With Code Libraries, Datasets and Literate Programs","text":"author ready4 framework literate programs, tools ready4show package recommended.","code":""},{"path":"https://ready4-dev.github.io/ready4/articles/ready4.html","id":"motivation","dir":"Articles","previous_headings":"","what":"Motivation","title":"ready4","text":"social, economic service systems shape population mental health complex thus can challenging model. mental health systems modelling projects may therefore tractable broken smaller tasks advanced multiple teams. phased collaborative approaches can facilitated use common frameworks development computational models open modular.","code":""},{"path":"https://ready4-dev.github.io/ready4/articles/ready4.html","id":"implementation","dir":"Articles","previous_headings":"","what":"Implementation","title":"ready4","text":"ready4 package provides bare bones initial outline framework open science computational models mental health systems. initial framework extended multiple R packages.","code":""},{"path":"https://ready4-dev.github.io/ready4/articles/ready4.html","id":"a-toolkit-for-open-and-modular-computational-models-of-mental-health-systems","dir":"Articles","previous_headings":"Implementation","what":"A toolkit for open and modular computational models of mental health systems","title":"ready4","text":"ready4 package introduces simple classes (data-structures) methods (algorithms) can useful modelling mental health systems. concepts discussed following articles: Develop Modular Computational Models Mental Health Systems Use Simple Consistent Syntax Computational Models Mental Health Systems Apply Object-Oriented Paradigm Computational Models Mental Health Systems","code":""},{"path":"https://ready4-dev.github.io/ready4/articles/ready4.html","id":"applying-and-extending-the-ready4-framework","dir":"Articles","previous_headings":"Implementation","what":"Applying and extending the ready4 framework","title":"ready4","text":"bare-bones framework outlined ready4 package extended code-libraries additional classes methods, repositories data can fed framework classes methods literate programs transparently link algorithms data. overview framework extensions described following article: Apply Extend Ready4 Framework Code Libraries, Datasets Literate Programs","code":""},{"path":"https://ready4-dev.github.io/ready4/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Matthew Hamilton. Author, maintainer. Orygen. Copyright holder, funder. VicHealth. Funder. Victoria University. Funder.","code":""},{"path":"https://ready4-dev.github.io/ready4/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Matthew P Hamilton  (2021). ready4: Implement Open Science Computational Models Mental Health Systems. Version 0.0.0.9075. https://doi.org/10.5281/zenodo.5606250","code":"@Manual{,   doi = {10.5281/zenodo.5606250},   title = {ready4: Implement Open Science Computational Models of Mental Health Systems},   author = {Matthew P Hamilton},   year = {2021},   note = {R package version 0.0.0.9075},   url = {https://ready4-dev.github.io/ready4/}, }"},{"path":[]},{"path":"https://ready4-dev.github.io/ready4/index.html","id":"implement-open-science-computational-models-of-mental-health-systems","dir":"","previous_headings":"","what":"Implement Open Science Computational Models of Mental Health Systems","title":"Implement Open Science Computational Models of Mental Health\n    Systems","text":"ready4 provides bare bones foundational elements (classes, generics, methods, functions) framework ensuring computational model components mental health systems modelling projects adhere open science principles. development version ready4 package made available part process testing documenting package. questions, please contact authors (matthew.hamilton@orygen.org.au). install development version software, run following commands R console:","code":"utils::install.packages(\"devtools\")  devtools::install_github(\"ready4-dev/ready4\")"},{"path":"https://ready4-dev.github.io/ready4/reference/Ready4Module-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Ready4Module — Ready4Module-class","title":"Ready4Module — Ready4Module-class","text":"module ready4 representational system.","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/Ready4Module-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Ready4Module — Ready4Module-class","text":"dissemination_1L_chr Dissemination (character vector length one)","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/Ready4Private-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Ready4Private — Ready4Private-class","title":"Ready4Private — Ready4Private-class","text":"module ready4 representational system contains data intended public dissemination.","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/Ready4Private-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Ready4Private — Ready4Private-class","text":"dissemination_1L_chr Dissemination (character vector length one)","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/Ready4Public-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Ready4Public — Ready4Public-class","title":"Ready4Public — Ready4Public-class","text":"virtual class denoting module ready4 representational system hat suitable public dissemination current form.","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/Ready4Public-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Ready4Public — Ready4Public-class","text":"dissemination_1L_chr Dissemination (character vector length one)","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/add_lups.html","id":null,"dir":"Reference","previous_headings":"","what":"Add lookup tables — add_lups","title":"Add lookup tables — add_lups","text":"add_lups() Add function updates object adding data object. Specifically, function implements algorithm add lookup tables. Function argument template_lup specifies object updated. function called side effects return value.","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/add_lups.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add lookup tables — add_lups","text":"","code":"add_lups(   template_lup,   new_lup,   key_var_nm_1L_chr,   priority_lup_for_dupls_1L_chr = \"template\" )"},{"path":"https://ready4-dev.github.io/ready4/reference/add_lups.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add lookup tables — add_lups","text":"template_lup Template (lookup table) new_lup New (lookup table) key_var_nm_1L_chr Key variable name (character vector length one) priority_lup_for_dupls_1L_chr Priority lookup table duplicates (character vector length one), Default: 'template'","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/add_lups.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add lookup tables — add_lups","text":"Combined (lookup tables)","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/add_references.html","id":null,"dir":"Reference","previous_headings":"","what":"Add references — add_references","title":"Add references — add_references","text":"add_references() Add function updates object adding data object. Specifically, function implements algorithm add references. Function argument ds_tb specifies object updated. function returns Dataset (tibble).","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/add_references.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add references — add_references","text":"","code":"add_references(   ds_tb,   data_var_nm_1L_chr = \"URL\",   data_url_var_nm_1L_chr = \"REF_URL\",   reference_var_nm_1L_chr = \"Reference\" )"},{"path":"https://ready4-dev.github.io/ready4/reference/add_references.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add references — add_references","text":"ds_tb Dataset (tibble) data_var_nm_1L_chr Data variable name (character vector length one), Default: 'URL' data_url_var_nm_1L_chr Data url variable name (character vector length one), Default: 'REF_URL' reference_var_nm_1L_chr Reference variable name (character vector length one), Default: 'Reference'","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/add_references.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add references — add_references","text":"Dataset (tibble)","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/add_vignette_links.html","id":null,"dir":"Reference","previous_headings":"","what":"Add vignette links — add_vignette_links","title":"Add vignette links — add_vignette_links","text":"add_vignette_links() Add function updates object adding data object. Specifically, function implements algorithm add vignette links. Function argument pkg_extensions_tb specifies object updated. function returns Package extensions (tibble).","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/add_vignette_links.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add vignette links — add_vignette_links","text":"","code":"add_vignette_links(   pkg_extensions_tb,   ns_var_nm_1L_chr = \"pt_ns_chr\",   reference_var_nm_1L_chr = \"Reference\",   url_stub_1L_chr = \"https://ready4-dev.github.io/\",   vignette_var_nm_1L_chr = \"Vignettes\",   vignette_url_var_nm_1L_chr = \"Vignettes_URLs\" )"},{"path":"https://ready4-dev.github.io/ready4/reference/add_vignette_links.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add vignette links — add_vignette_links","text":"pkg_extensions_tb Package extensions (tibble) ns_var_nm_1L_chr Namespace variable name (character vector length one), Default: 'pt_ns_chr' reference_var_nm_1L_chr Reference variable name (character vector length one), Default: 'Reference' url_stub_1L_chr Url stub (character vector length one), Default: 'https://ready4-dev.github.io/' vignette_var_nm_1L_chr Vignette variable name (character vector length one), Default: 'Vignettes' vignette_url_var_nm_1L_chr Vignette url variable name (character vector length one), Default: 'Vignettes_URLs'","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/add_vignette_links.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add vignette links — add_vignette_links","text":"Package extensions (tibble)","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/author-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Author and save files — author","title":"Author and save files — author","text":"author() method authors saves files.","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/author-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Author and save files — author","text":"","code":"author(x, ...)"},{"path":"https://ready4-dev.github.io/ready4/reference/author-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Author and save files — author","text":"x object ... Additional arguments","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/authorClasses-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Author and document classes — authorClasses","title":"Author and document classes — authorClasses","text":"authorClasses() method authors saves code files creating documenting classes R package directory.","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/authorClasses-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Author and document classes — authorClasses","text":"","code":"authorClasses(x, ...)"},{"path":"https://ready4-dev.github.io/ready4/reference/authorClasses-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Author and document classes — authorClasses","text":"x object ... Additional arguments","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/authorData-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Author and document datasets — authorData","title":"Author and document datasets — authorData","text":"authorData() method authors saves code files creating documenting datasets.","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/authorData-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Author and document datasets — authorData","text":"","code":"authorData(x, ...)"},{"path":"https://ready4-dev.github.io/ready4/reference/authorData-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Author and document datasets — authorData","text":"x object ... Additional arguments","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/authorFunctions-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Author and document functions — authorFunctions","title":"Author and document functions — authorFunctions","text":"authorFunctions() method authors saves files necessary creating documenting functions R package directory.","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/authorFunctions-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Author and document functions — authorFunctions","text":"","code":"authorFunctions(x, ...)"},{"path":"https://ready4-dev.github.io/ready4/reference/authorFunctions-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Author and document functions — authorFunctions","text":"x object ... Additional arguments","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/authorReport-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Author and save a report — authorReport","title":"Author and save a report — authorReport","text":"authorReport() method authors saves report.","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/authorReport-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Author and save a report — authorReport","text":"","code":"authorReport(x, ...)"},{"path":"https://ready4-dev.github.io/ready4/reference/authorReport-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Author and save a report — authorReport","text":"x object ... Additional arguments","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/authorSlot-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply the author method to a slot — authorSlot","title":"Apply the author method to a slot — authorSlot","text":"authorSlot() convenience method applies author method specified slot object. authorSlot method applied Ready4Module","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/authorSlot-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply the author method to a slot — authorSlot","text":"","code":"authorSlot(x, slot_nm_1L_chr, ...)  # S4 method for Ready4Module authorSlot(x, slot_nm_1L_chr, ...)"},{"path":"https://ready4-dev.github.io/ready4/reference/authorSlot-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply the author method to a slot — authorSlot","text":"x object class Ready4Module slot_nm_1L_chr Slot name (length one character vector) ... Additional arguments","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/characterize-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Characterize the features of a ready4 framework module / sub-module — characterize","title":"Characterize the features of a ready4 framework module / sub-module — characterize","text":"characterize() method generates descriptive information features ready4 framework module / sub-module.","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/characterize-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Characterize the features of a ready4 framework module / sub-module — characterize","text":"","code":"characterize(x, ...)"},{"path":"https://ready4-dev.github.io/ready4/reference/characterize-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Characterize the features of a ready4 framework module / sub-module — characterize","text":"x object ... Additional arguments","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/characterizeSlot-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply the characterize method to a slot — characterizeSlot","title":"Apply the characterize method to a slot — characterizeSlot","text":"characterizeSlot() method generates descriptive information data stored slot S4 object. characterizeSlot method applied Ready4Module","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/characterizeSlot-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply the characterize method to a slot — characterizeSlot","text":"","code":"characterizeSlot(x, slot_nm_1L_chr, ...)  # S4 method for Ready4Module characterizeSlot(x, slot_nm_1L_chr, ...)"},{"path":"https://ready4-dev.github.io/ready4/reference/characterizeSlot-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply the characterize method to a slot — characterizeSlot","text":"x object class Ready4Module slot_nm_1L_chr Slot name (length one character vector) ... Additional arguments","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/depict-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Depict (plot) features of a ready4 framework module / sub-module — depict","title":"Depict (plot) features of a ready4 framework module / sub-module — depict","text":"depict() method plots features ready4 framework module / sub-module.","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/depict-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Depict (plot) features of a ready4 framework module / sub-module — depict","text":"","code":"depict(x, ...)"},{"path":"https://ready4-dev.github.io/ready4/reference/depict-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Depict (plot) features of a ready4 framework module / sub-module — depict","text":"x object ... Additional arguments","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/depictSlot-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply the depict method to a slot — depictSlot","title":"Apply the depict method to a slot — depictSlot","text":"depictSlot() convenience method applies depict method specified slot object. depictSlot method applied Ready4Module","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/depictSlot-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply the depict method to a slot — depictSlot","text":"","code":"depictSlot(x, slot_nm_1L_chr, ...)  # S4 method for Ready4Module depictSlot(x, slot_nm_1L_chr, ...)"},{"path":"https://ready4-dev.github.io/ready4/reference/depictSlot-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply the depict method to a slot — depictSlot","text":"x object class Ready4Module slot_nm_1L_chr Slot name (length one character vector) ... Additional arguments","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/deprecated.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated function — deprecated","title":"Deprecated function — deprecated","text":"Import deprecated function recommended lifecycle package documentation.","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/enhance-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Enhance a ready4 framework module / sub-module with new data items — enhance","title":"Enhance a ready4 framework module / sub-module with new data items — enhance","text":"enhance() method adds new data fields values extendable objects ready4 framework module / sub-module.","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/enhance-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Enhance a ready4 framework module / sub-module with new data items — enhance","text":"","code":"enhance(x, ...)"},{"path":"https://ready4-dev.github.io/ready4/reference/enhance-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Enhance a ready4 framework module / sub-module with new data items — enhance","text":"x object ... Additional arguments","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/enhanceSlot-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply the enhance method to a slot — enhanceSlot","title":"Apply the enhance method to a slot — enhanceSlot","text":"enhanceSlot() method adds new data fields values object stored slot instance. enhanceSlot method applied Ready4Module","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/enhanceSlot-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply the enhance method to a slot — enhanceSlot","text":"","code":"enhanceSlot(x, slot_nm_1L_chr, ...)  # S4 method for Ready4Module enhanceSlot(x, slot_nm_1L_chr, ...)"},{"path":"https://ready4-dev.github.io/ready4/reference/enhanceSlot-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply the enhance method to a slot — enhanceSlot","text":"x object class Ready4Module slot_nm_1L_chr Slot name (length one character vector) ... Additional arguments","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/exhibit-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Exhibit (print to console) features of a ready4 framework module / sub-module — exhibit","title":"Exhibit (print to console) features of a ready4 framework module / sub-module — exhibit","text":"exhibit() method prints salient features ready4 framework module / sub-module console.","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/exhibit-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Exhibit (print to console) features of a ready4 framework module / sub-module — exhibit","text":"","code":"exhibit(x, ...)"},{"path":"https://ready4-dev.github.io/ready4/reference/exhibit-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Exhibit (print to console) features of a ready4 framework module / sub-module — exhibit","text":"x object ... Additional arguments","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/exhibitSlot-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply the exhibit method to a slot — exhibitSlot","title":"Apply the exhibit method to a slot — exhibitSlot","text":"exhibitSlot() convenience method applies exhibit method specified slot object. exhibitSlot method applied Ready4Module","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/exhibitSlot-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply the exhibit method to a slot — exhibitSlot","text":"","code":"exhibitSlot(x, slot_nm_1L_chr, ...)  # S4 method for Ready4Module exhibitSlot(x, slot_nm_1L_chr, ...)"},{"path":"https://ready4-dev.github.io/ready4/reference/exhibitSlot-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply the exhibit method to a slot — exhibitSlot","text":"x object class Ready4Module slot_nm_1L_chr Slot name (length one character vector) ... Additional arguments","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/get_badge_urls.html","id":null,"dir":"Reference","previous_headings":"","what":"Get badge urls — get_badge_urls","title":"Get badge urls — get_badge_urls","text":"get_badge_urls() Get function retrieves pre-existing data object memory, local file system online repository. Specifically, function implements algorithm get badge urls. Function argument pkg_nm_1L_chr specifies look required object. function returns Badge urls (list).","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/get_badge_urls.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get badge urls — get_badge_urls","text":"","code":"get_badge_urls(pkg_nm_1L_chr)"},{"path":"https://ready4-dev.github.io/ready4/reference/get_badge_urls.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get badge urls — get_badge_urls","text":"pkg_nm_1L_chr Package name (character vector length one)","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/get_badge_urls.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get badge urls — get_badge_urls","text":"Badge urls (list)","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/get_badges_lup.html","id":null,"dir":"Reference","previous_headings":"","what":"Get badges lookup table — get_badges_lup","title":"Get badges lookup table — get_badges_lup","text":"get_badges_lup() Get function retrieves pre-existing data object memory, local file system online repository. Specifically, function implements algorithm get badges lookup table. Function argument gh_repo_1L_chr specifies look required object. function returns Ready4 badges (lookup table).","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/get_badges_lup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get badges lookup table — get_badges_lup","text":"","code":"get_badges_lup(   gh_repo_1L_chr = \"ready4-dev/ready4\",   gh_tag_1L_chr = \"Documentation_0.0\" )"},{"path":"https://ready4-dev.github.io/ready4/reference/get_badges_lup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get badges lookup table — get_badges_lup","text":"gh_repo_1L_chr Github repository (character vector length one), Default: 'ready4-dev/ready4' gh_tag_1L_chr Github tag (character vector length one), Default: 'Documentation_0.0'","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/get_badges_lup.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get badges lookup table — get_badges_lup","text":"Ready4 badges (lookup table)","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/get_cls_extensions.html","id":null,"dir":"Reference","previous_headings":"","what":"Get class extensions — get_cls_extensions","title":"Get class extensions — get_cls_extensions","text":"get_cls_extensions() Get function retrieves pre-existing data object memory, local file system online repository. Specifically, function implements algorithm get class extensions. Function argument pkg_extensions_tb specifies look required object. function returns Class extensions (tibble).","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/get_cls_extensions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get class extensions — get_cls_extensions","text":"","code":"get_cls_extensions(   pkg_extensions_tb,   gh_repo_1L_chr = \"ready4-dev/ready4\",   gh_tag_1L_chr = \"Documentation_0.0\" )"},{"path":"https://ready4-dev.github.io/ready4/reference/get_cls_extensions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get class extensions — get_cls_extensions","text":"pkg_extensions_tb Package extensions (tibble) gh_repo_1L_chr Github repository (character vector length one), Default: 'ready4-dev/ready4' gh_tag_1L_chr Github tag (character vector length one), Default: 'Documentation_0.0'","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/get_cls_extensions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get class extensions — get_cls_extensions","text":"Class extensions (tibble)","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/get_dv_fls_urls.html","id":null,"dir":"Reference","previous_headings":"","what":"Get dataverse files urls — get_dv_fls_urls","title":"Get dataverse files urls — get_dv_fls_urls","text":"get_dv_fls_urls() Get function retrieves pre-existing data object memory, local file system online repository. Specifically, function implements algorithm get dataverse files urls. Function argument file_nms_chr specifies look required object. function returns Urls (character vector).","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/get_dv_fls_urls.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get dataverse files urls — get_dv_fls_urls","text":"","code":"get_dv_fls_urls(   file_nms_chr,   dv_ds_nm_1L_chr,   dv_url_pfx_1L_chr = character(0),   server_1L_chr = Sys.getenv(\"DATAVERSE_SERVER\"),   key_1L_chr = NULL )"},{"path":"https://ready4-dev.github.io/ready4/reference/get_dv_fls_urls.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get dataverse files urls — get_dv_fls_urls","text":"file_nms_chr File names (character vector) dv_ds_nm_1L_chr Dataverse dataset name (character vector length one) dv_url_pfx_1L_chr Dataverse url prefix (character vector length one), Default: character(0) server_1L_chr Server (character vector length one), Default: Sys.getenv(\"DATAVERSE_SERVER\") key_1L_chr Key (character vector length one), Default: NULL","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/get_dv_fls_urls.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get dataverse files urls — get_dv_fls_urls","text":"Urls (character vector)","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/get_examples.html","id":null,"dir":"Reference","previous_headings":"","what":"Get examples — get_examples","title":"Get examples — get_examples","text":"get_examples() Get function retrieves pre-existing data object memory, local file system online repository. Specifically, function implements algorithm get examples. Function argument vignettes_chr specifies look required object. function returns Examples (character vector).","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/get_examples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get examples — get_examples","text":"","code":"get_examples(vignettes_chr, term_1L_chr)"},{"path":"https://ready4-dev.github.io/ready4/reference/get_examples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get examples — get_examples","text":"vignettes_chr Vignettes (character vector) term_1L_chr Term (character vector length one)","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/get_examples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get examples — get_examples","text":"Examples (character vector)","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/get_fl_id_from_dv_ls.html","id":null,"dir":"Reference","previous_headings":"","what":"Get file identity from dataverse list — get_fl_id_from_dv_ls","title":"Get file identity from dataverse list — get_fl_id_from_dv_ls","text":"get_fl_id_from_dv_ls() Get function retrieves pre-existing data object memory, local file system online repository. Specifically, function implements algorithm get file identity dataverse list. Function argument ds_ls specifies look required object. function returns Identity (character vector length one).","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/get_fl_id_from_dv_ls.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get file identity from dataverse list — get_fl_id_from_dv_ls","text":"","code":"get_fl_id_from_dv_ls(ds_ls, fl_nm_1L_chr, nms_chr = NA_character_)"},{"path":"https://ready4-dev.github.io/ready4/reference/get_fl_id_from_dv_ls.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get file identity from dataverse list — get_fl_id_from_dv_ls","text":"ds_ls Dataset (list) fl_nm_1L_chr File name (character vector length one) nms_chr Names (character vector), Default: 'NA'","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/get_fl_id_from_dv_ls.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get file identity from dataverse list — get_fl_id_from_dv_ls","text":"Identity (character vector length one)","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/get_from_lup_obj.html","id":null,"dir":"Reference","previous_headings":"","what":"Get from lookup table object — get_from_lup_obj","title":"Get from lookup table object — get_from_lup_obj","text":"get_from_lup_obj() Get function retrieves pre-existing data object memory, local file system online repository. Specifically, function implements algorithm get lookup table object. Function argument data_lookup_tb specifies look required object. function returns Return object (output object multiple potential types).","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/get_from_lup_obj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get from lookup table object — get_from_lup_obj","text":"","code":"get_from_lup_obj(   data_lookup_tb,   match_value_xx,   match_var_nm_1L_chr,   target_var_nm_1L_chr,   evaluate_1L_lgl = FALSE )"},{"path":"https://ready4-dev.github.io/ready4/reference/get_from_lup_obj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get from lookup table object — get_from_lup_obj","text":"data_lookup_tb Data lookup (tibble) match_value_xx Match value (output object multiple potential types) match_var_nm_1L_chr Match variable name (character vector length one) target_var_nm_1L_chr Target variable name (character vector length one) evaluate_1L_lgl Evaluate (logical vector length one), Default: FALSE","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/get_from_lup_obj.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get from lookup table object — get_from_lup_obj","text":"Return object (output object multiple potential types)","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/get_functions_tb.html","id":null,"dir":"Reference","previous_headings":"","what":"Get functions tibble — get_functions_tb","title":"Get functions tibble — get_functions_tb","text":"get_functions_tb() Get function retrieves pre-existing data object memory, local file system online repository. Specifically, function implements algorithm get functions tibble. Function argument gh_repo_1L_chr specifies look required object. function returns Functions (tibble).","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/get_functions_tb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get functions tibble — get_functions_tb","text":"","code":"get_functions_tb(   gh_repo_1L_chr = \"ready4-dev/ready4\",   gh_tag_1L_chr = \"Documentation_0.0\",   return_1L_chr = \"all\" )"},{"path":"https://ready4-dev.github.io/ready4/reference/get_functions_tb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get functions tibble — get_functions_tb","text":"gh_repo_1L_chr Github repository (character vector length one), Default: 'ready4-dev/ready4' gh_tag_1L_chr Github tag (character vector length one), Default: 'Documentation_0.0' return_1L_chr Return (character vector length one), Default: ''","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/get_functions_tb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get functions tibble — get_functions_tb","text":"Functions (tibble)","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/get_generics.html","id":null,"dir":"Reference","previous_headings":"","what":"Get generics — get_generics","title":"Get generics — get_generics","text":"get_generics() Get function retrieves pre-existing data object memory, local file system online repository. Specifically, function implements algorithm get generics. Function argument pkg_nm_1L_chr specifies look required object. function returns Generics (character vector).","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/get_generics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get generics — get_generics","text":"","code":"get_generics(   pkg_nm_1L_chr = \"ready4\",   return_1L_lgl = \"all\",   exclude_mthds_for_chr = NA_character_ )"},{"path":"https://ready4-dev.github.io/ready4/reference/get_generics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get generics — get_generics","text":"pkg_nm_1L_chr Package name (character vector length one), Default: 'ready4' return_1L_lgl Return (logical vector length one), Default: '' exclude_mthds_for_chr Exclude methods (character vector), Default: 'NA'","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/get_generics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get generics — get_generics","text":"Generics (character vector)","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/get_manual_urls.html","id":null,"dir":"Reference","previous_headings":"","what":"Get manual urls — get_manual_urls","title":"Get manual urls — get_manual_urls","text":"get_manual_urls() Get function retrieves pre-existing data object memory, local file system online repository. Specifically, function implements algorithm get manual urls. Function argument pkg_nm_1L_chr specifies look required object. function returns Urls (character vector).","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/get_manual_urls.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get manual urls — get_manual_urls","text":"","code":"get_manual_urls(   pkg_nm_1L_chr = \"ready4\",   pkg_url_1L_chr = \"https://ready4-dev.github.io/ready4/index.html\" )"},{"path":"https://ready4-dev.github.io/ready4/reference/get_manual_urls.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get manual urls — get_manual_urls","text":"pkg_nm_1L_chr Package name (character vector length one), Default: 'ready4' pkg_url_1L_chr Package url (character vector length one), Default: 'https://ready4-dev.github.io/ready4/index.html'","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/get_manual_urls.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get manual urls — get_manual_urls","text":"Urls (character vector)","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/get_methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Get methods — get_methods","title":"Get methods — get_methods","text":"get_methods() Get function retrieves pre-existing data object memory, local file system online repository. Specifically, function implements algorithm get methods. Function argument pkg_nm_1L_chr specifies look required object. function returns Methods (character vector).","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/get_methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get methods — get_methods","text":"","code":"get_methods(pkg_nm_1L_chr = \"ready4\", cls_nm_1L_chr = \"Ready4Module\")"},{"path":"https://ready4-dev.github.io/ready4/reference/get_methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get methods — get_methods","text":"pkg_nm_1L_chr Package name (character vector length one), Default: 'ready4' cls_nm_1L_chr Class name (character vector length one), Default: 'Ready4Module'","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/get_methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get methods — get_methods","text":"Methods (character vector)","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/get_mthd_titles.html","id":null,"dir":"Reference","previous_headings":"","what":"Get method titles — get_mthd_titles","title":"Get method titles — get_mthd_titles","text":"get_mthd_titles() Get function retrieves pre-existing data object memory, local file system online repository. Specifically, function implements algorithm get method titles. Function argument mthd_nms_chr specifies look required object. function returns Method titles (character vector).","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/get_mthd_titles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get method titles — get_mthd_titles","text":"","code":"get_mthd_titles(mthd_nms_chr, pkg_nm_1L_chr = \"ready4\")"},{"path":"https://ready4-dev.github.io/ready4/reference/get_mthd_titles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get method titles — get_mthd_titles","text":"mthd_nms_chr Method names (character vector) pkg_nm_1L_chr Package name (character vector length one), Default: 'ready4'","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/get_mthd_titles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get method titles — get_mthd_titles","text":"Method titles (character vector)","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/get_r4_obj_slots.html","id":null,"dir":"Reference","previous_headings":"","what":"Get ready4 S4 object slots — get_r4_obj_slots","title":"Get ready4 S4 object slots — get_r4_obj_slots","text":"get_r4_obj_slots() Get function retrieves pre-existing data object memory, local file system online repository. Specifically, function implements algorithm get ready4 s4 object slots. Function argument fn_name_1L_chr specifies look required object. function returns Slots (character vector).","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/get_r4_obj_slots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get ready4 S4 object slots — get_r4_obj_slots","text":"","code":"get_r4_obj_slots(fn_name_1L_chr, package_1L_chr = \"\")"},{"path":"https://ready4-dev.github.io/ready4/reference/get_r4_obj_slots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get ready4 S4 object slots — get_r4_obj_slots","text":"fn_name_1L_chr Function name (character vector length one) package_1L_chr Package (character vector length one), Default: ''","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/get_r4_obj_slots.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get ready4 S4 object slots — get_r4_obj_slots","text":"Slots (character vector)","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/get_rds_from_dv.html","id":null,"dir":"Reference","previous_headings":"","what":"Get rds from dataverse — get_rds_from_dv","title":"Get rds from dataverse — get_rds_from_dv","text":"get_rds_from_dv() Get function retrieves pre-existing data object memory, local file system online repository. Specifically, function implements algorithm get rds dataverse. Function argument file_nm_1L_chr specifies look required object. function returns R object (output object multiple potential types).","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/get_rds_from_dv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get rds from dataverse — get_rds_from_dv","text":"","code":"get_rds_from_dv(   file_nm_1L_chr,   dv_ds_nm_1L_chr = \"https://doi.org/10.7910/DVN/2Y9VF9\",   dv_url_pfx_1L_chr = character(0),   key_1L_chr = NULL,   server_1L_chr = Sys.getenv(\"DATAVERSE_SERVER\") )"},{"path":"https://ready4-dev.github.io/ready4/reference/get_rds_from_dv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get rds from dataverse — get_rds_from_dv","text":"file_nm_1L_chr File name (character vector length one) dv_ds_nm_1L_chr Dataverse dataset name (character vector length one), Default: 'https://doi.org/10.7910/DVN/2Y9VF9' dv_url_pfx_1L_chr Dataverse url prefix (character vector length one), Default: character(0) key_1L_chr Key (character vector length one), Default: NULL server_1L_chr Server (character vector length one), Default: Sys.getenv(\"DATAVERSE_SERVER\")","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/get_rds_from_dv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get rds from dataverse — get_rds_from_dv","text":"R object (output object multiple potential types)","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/get_source_code_urls.html","id":null,"dir":"Reference","previous_headings":"","what":"Get source code urls — get_source_code_urls","title":"Get source code urls — get_source_code_urls","text":"get_source_code_urls() Get function retrieves pre-existing data object memory, local file system online repository. Specifically, function implements algorithm get source code urls. Function argument pkg_nm_1L_chr specifies look required object. function returns Urls (character vector).","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/get_source_code_urls.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get source code urls — get_source_code_urls","text":"","code":"get_source_code_urls(   pkg_nm_1L_chr = \"ready4\",   pkg_url_1L_chr = \"https://ready4-dev.github.io/ready4/index.html\" )"},{"path":"https://ready4-dev.github.io/ready4/reference/get_source_code_urls.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get source code urls — get_source_code_urls","text":"pkg_nm_1L_chr Package name (character vector length one), Default: 'ready4' pkg_url_1L_chr Package url (character vector length one), Default: 'https://ready4-dev.github.io/ready4/index.html'","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/get_source_code_urls.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get source code urls — get_source_code_urls","text":"Urls (character vector)","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/ingest-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Ingest data — ingest","title":"Ingest data — ingest","text":"ingest() method ingests data saved external files ready4 framework module / sub-module.","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/ingest-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ingest data — ingest","text":"","code":"ingest(x, ...)"},{"path":"https://ready4-dev.github.io/ready4/reference/ingest-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ingest data — ingest","text":"x object ... Additional arguments","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/ingestSlot-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply the ingest method to a slot — ingestSlot","title":"Apply the ingest method to a slot — ingestSlot","text":"ingestSlot() convenience method applies ingest method specified slot object. ingestSlot method applied Ready4Module","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/ingestSlot-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply the ingest method to a slot — ingestSlot","text":"","code":"ingestSlot(x, slot_nm_1L_chr, ...)  # S4 method for Ready4Module ingestSlot(x, slot_nm_1L_chr, ...)"},{"path":"https://ready4-dev.github.io/ready4/reference/ingestSlot-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply the ingest method to a slot — ingestSlot","text":"x object class Ready4Module slot_nm_1L_chr Slot name (length one character vector) ... Additional arguments","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/investigate-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Investigate solutions to an inverse problem — investigate","title":"Investigate solutions to an inverse problem — investigate","text":"investigate() method applies algorithm solve inverse problem (ie, given data,  identify statistical model can generate approximations data) data contained ready4 framework module / sub-module.","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/investigate-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Investigate solutions to an inverse problem — investigate","text":"","code":"investigate(x, ...)"},{"path":"https://ready4-dev.github.io/ready4/reference/investigate-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Investigate solutions to an inverse problem — investigate","text":"x object ... Additional arguments","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/investigateSlot-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply the investigate method to a slot — investigateSlot","title":"Apply the investigate method to a slot — investigateSlot","text":"investigateSlot() convenience method applies investigate method specified slot object. investigateSlot method applied Ready4Module","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/investigateSlot-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply the investigate method to a slot — investigateSlot","text":"","code":"investigateSlot(x, slot_nm_1L_chr, ...)  # S4 method for Ready4Module investigateSlot(x, slot_nm_1L_chr, ...)"},{"path":"https://ready4-dev.github.io/ready4/reference/investigateSlot-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply the investigate method to a slot — investigateSlot","text":"x object class Ready4Module slot_nm_1L_chr Slot name (length one character vector) ... Additional arguments","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/make_dvs_tb.html","id":null,"dir":"Reference","previous_headings":"","what":"Make dataverses tibble — make_dvs_tb","title":"Make dataverses tibble — make_dvs_tb","text":"make_dvs_tb() Make function creates new R object. Specifically, function implements algorithm make dataverses tibble. function returns Dataverses (tibble).","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/make_dvs_tb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make dataverses tibble — make_dvs_tb","text":"","code":"make_dvs_tb(   dv_nm_1L_chr = \"ready4\",   key_1L_chr = NULL,   server_1L_chr = \"dataverse.harvard.edu\" )"},{"path":"https://ready4-dev.github.io/ready4/reference/make_dvs_tb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make dataverses tibble — make_dvs_tb","text":"dv_nm_1L_chr Dataverse name (character vector length one), Default: 'ready4' key_1L_chr Key (character vector length one), Default: NULL server_1L_chr Server (character vector length one), Default: 'dataverse.harvard.edu'","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/make_dvs_tb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make dataverses tibble — make_dvs_tb","text":"Dataverses (tibble)","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/make_files_tb.html","id":null,"dir":"Reference","previous_headings":"","what":"Make files tibble — make_files_tb","title":"Make files tibble — make_files_tb","text":"make_files_tb() Make function creates new R object. Specifically, function implements algorithm make files tibble. function returns Files (tibble).","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/make_files_tb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make files tibble — make_files_tb","text":"","code":"make_files_tb(paths_to_dirs_chr, recode_ls, inc_fl_types_chr = NA_character_)"},{"path":"https://ready4-dev.github.io/ready4/reference/make_files_tb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make files tibble — make_files_tb","text":"paths_to_dirs_chr Paths directories (character vector) recode_ls Recode (list) inc_fl_types_chr Include file types (character vector), Default: 'NA'","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/make_files_tb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make files tibble — make_files_tb","text":"Files (tibble)","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/make_libraries_tb.html","id":null,"dir":"Reference","previous_headings":"","what":"Make libraries tibble — make_libraries_tb","title":"Make libraries tibble — make_libraries_tb","text":"make_libraries_tb() Make function creates new R object. Specifically, function implements algorithm make libraries tibble. function returns Package extensions (tibble).","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/make_libraries_tb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make libraries tibble — make_libraries_tb","text":"","code":"make_libraries_tb(   ns_var_nm_1L_chr = \"pt_ns_chr\",   reference_var_nm_1L_chr = \"Reference\",   url_stub_1L_chr = \"https://ready4-dev.github.io/\",   vignette_var_nm_1L_chr = \"Vignettes\",   vignette_url_var_nm_1L_chr = \"Vignettes_URLs\" )"},{"path":"https://ready4-dev.github.io/ready4/reference/make_libraries_tb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make libraries tibble — make_libraries_tb","text":"ns_var_nm_1L_chr Namespace variable name (character vector length one), Default: 'pt_ns_chr' reference_var_nm_1L_chr Reference variable name (character vector length one), Default: 'Reference' url_stub_1L_chr Url stub (character vector length one), Default: 'https://ready4-dev.github.io/' vignette_var_nm_1L_chr Vignette variable name (character vector length one), Default: 'Vignettes' vignette_url_var_nm_1L_chr Vignette url variable name (character vector length one), Default: 'Vignettes_URLs'","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/make_libraries_tb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make libraries tibble — make_libraries_tb","text":"Package extensions (tibble)","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/make_list_phrase.html","id":null,"dir":"Reference","previous_headings":"","what":"Make list phrase — make_list_phrase","title":"Make list phrase — make_list_phrase","text":"make_list_phrase() Make function creates new R object. Specifically, function implements algorithm make list phrase. function returns List phrase (character vector length one).","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/make_list_phrase.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make list phrase — make_list_phrase","text":"","code":"make_list_phrase(items_chr)"},{"path":"https://ready4-dev.github.io/ready4/reference/make_list_phrase.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make list phrase — make_list_phrase","text":"items_chr Items (character vector)","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/make_list_phrase.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make list phrase — make_list_phrase","text":"List phrase (character vector length one)","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/make_local_path_to_dv_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Make local path to dataverse data — make_local_path_to_dv_data","title":"Make local path to dataverse data — make_local_path_to_dv_data","text":"make_local_path_to_dv_data() Make function creates new R object. Specifically, function implements algorithm make local path dataverse data. function returns Path (character vector).","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/make_local_path_to_dv_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make local path to dataverse data — make_local_path_to_dv_data","text":"","code":"make_local_path_to_dv_data(save_dir_path_1L_chr, fl_nm_1L_chr, save_fmt_1L_chr)"},{"path":"https://ready4-dev.github.io/ready4/reference/make_local_path_to_dv_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make local path to dataverse data — make_local_path_to_dv_data","text":"save_dir_path_1L_chr Save directory path (character vector length one) fl_nm_1L_chr File name (character vector length one) save_fmt_1L_chr Save format (character vector length one)","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/make_local_path_to_dv_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make local path to dataverse data — make_local_path_to_dv_data","text":"Path (character vector)","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/make_methods_tb.html","id":null,"dir":"Reference","previous_headings":"","what":"Make methods tibble — make_methods_tb","title":"Make methods tibble — make_methods_tb","text":"make_methods_tb() Make function creates new R object. Specifically, function implements algorithm make methods tibble. function returns Methods (tibble).","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/make_methods_tb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make methods tibble — make_methods_tb","text":"","code":"make_methods_tb(   packages_tb = NULL,   exclude_mthds_for_chr = NA_character_,   ns_var_nm_1L_chr = \"pt_ns_chr\",   reference_var_nm_1L_chr = \"Reference\",   return_1L_lgl = \"all\",   url_stub_1L_chr = \"https://ready4-dev.github.io/\",   vignette_var_nm_1L_chr = \"Vignettes\",   vignette_url_var_nm_1L_chr = \"Vignettes_URLs\" )"},{"path":"https://ready4-dev.github.io/ready4/reference/make_methods_tb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make methods tibble — make_methods_tb","text":"packages_tb Packages (tibble), Default: NULL exclude_mthds_for_chr Exclude methods (character vector), Default: 'NA' ns_var_nm_1L_chr Namespace variable name (character vector length one), Default: 'pt_ns_chr' reference_var_nm_1L_chr Reference variable name (character vector length one), Default: 'Reference' return_1L_lgl Return (logical vector length one), Default: '' url_stub_1L_chr Url stub (character vector length one), Default: 'https://ready4-dev.github.io/' vignette_var_nm_1L_chr Vignette variable name (character vector length one), Default: 'Vignettes' vignette_url_var_nm_1L_chr Vignette url variable name (character vector length one), Default: 'Vignettes_URLs'","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/make_methods_tb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make methods tibble — make_methods_tb","text":"Methods (tibble)","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/make_modules_tb.html","id":null,"dir":"Reference","previous_headings":"","what":"Make modules tibble — make_modules_tb","title":"Make modules tibble — make_modules_tb","text":"make_modules_tb() Make function creates new R object. Specifically, function implements algorithm make modules tibble. function returns Modules (tibble).","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/make_modules_tb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make modules tibble — make_modules_tb","text":"","code":"make_modules_tb(   pkg_extensions_tb = NULL,   cls_extensions_tb = NULL,   gh_repo_1L_chr = \"ready4-dev/ready4\",   gh_tag_1L_chr = \"Documentation_0.0\" )"},{"path":"https://ready4-dev.github.io/ready4/reference/make_modules_tb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make modules tibble — make_modules_tb","text":"pkg_extensions_tb Package extensions (tibble), Default: NULL cls_extensions_tb Class extensions (tibble), Default: NULL gh_repo_1L_chr Github repository (character vector length one), Default: 'ready4-dev/ready4' gh_tag_1L_chr Github tag (character vector length one), Default: 'Documentation_0.0'","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/make_modules_tb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make modules tibble — make_modules_tb","text":"Modules (tibble)","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/make_prompt.html","id":null,"dir":"Reference","previous_headings":"","what":"Make prompt — make_prompt","title":"Make prompt — make_prompt","text":"make_prompt() Make function creates new R object. Specifically, function implements algorithm make prompt. function returns Response (character vector length one).","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/make_prompt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make prompt — make_prompt","text":"","code":"make_prompt(prompt_1L_chr, options_chr = NULL, force_from_opts_1L_chr = F)"},{"path":"https://ready4-dev.github.io/ready4/reference/make_prompt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make prompt — make_prompt","text":"prompt_1L_chr Prompt (character vector length one) options_chr Options (character vector), Default: NULL force_from_opts_1L_chr Force opts (character vector length one), Default: F","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/make_prompt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make prompt — make_prompt","text":"Response (character vector length one)","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/manufacture-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Manufacture a (non ready4 framework) object — manufacture","title":"Manufacture a (non ready4 framework) object — manufacture","text":"manufacture() method creates new object (ready4 framework module / sub-module).","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/manufacture-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Manufacture a (non ready4 framework) object — manufacture","text":"","code":"manufacture(x, ...)"},{"path":"https://ready4-dev.github.io/ready4/reference/manufacture-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Manufacture a (non ready4 framework) object — manufacture","text":"x object ... Additional arguments","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/manufactureSlot-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply the manufacture method to a slot — manufactureSlot","title":"Apply the manufacture method to a slot — manufactureSlot","text":"manufactureSlot() convenience method applies manufacture method specified slot object. manufactureSlot method applied Ready4Module","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/manufactureSlot-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply the manufacture method to a slot — manufactureSlot","text":"","code":"manufactureSlot(x, slot_nm_1L_chr, ...)  # S4 method for Ready4Module manufactureSlot(x, slot_nm_1L_chr, ...)"},{"path":"https://ready4-dev.github.io/ready4/reference/manufactureSlot-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply the manufacture method to a slot — manufactureSlot","text":"x object class Ready4Module slot_nm_1L_chr Slot name (length one character vector) ... Additional arguments","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/metamorphose-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Metamorphose from one ready4 framework module / sub-module class to another — metamorphose","title":"Metamorphose from one ready4 framework module / sub-module class to another — metamorphose","text":"metamorphose() method transforms ready4 framework module / sub-module different class ready4 framework module / sub-module.","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/metamorphose-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metamorphose from one ready4 framework module / sub-module class to another — metamorphose","text":"","code":"metamorphose(x, ...)"},{"path":"https://ready4-dev.github.io/ready4/reference/metamorphose-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metamorphose from one ready4 framework module / sub-module class to another — metamorphose","text":"x object ... Additional arguments","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/metamorphoseSlot-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply the metamorphose method to a slot — metamorphoseSlot","title":"Apply the metamorphose method to a slot — metamorphoseSlot","text":"metamorphoseSlot() method transforms ready4 object stored slot object ready4 object different class. metamorphoseSlot method applied Ready4Module","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/metamorphoseSlot-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply the metamorphose method to a slot — metamorphoseSlot","text":"","code":"metamorphoseSlot(x, slot_nm_1L_chr, ...)  # S4 method for Ready4Module metamorphoseSlot(x, slot_nm_1L_chr, ...)"},{"path":"https://ready4-dev.github.io/ready4/reference/metamorphoseSlot-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply the metamorphose method to a slot — metamorphoseSlot","text":"x object class Ready4Module slot_nm_1L_chr Slot name (length one character vector) ... Additional arguments","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"Implements: https://github.com/sckott/analogsea/issues/32 https://github.com/rstudio/ggvis/blob/master/R/pipe.R.","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs, rhs object function apply ","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/print_dss.html","id":null,"dir":"Reference","previous_headings":"","what":"Print datasets — print_dss","title":"Print datasets — print_dss","text":"print_dss() Print function prints output console Specifically, function implements algorithm print datasets. function called side effects return value.","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/print_dss.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print datasets — print_dss","text":"","code":"print_dss(dvs_tb, what_1L_chr = \"all\")"},{"path":"https://ready4-dev.github.io/ready4/reference/print_dss.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print datasets — print_dss","text":"dvs_tb Dataverses (tibble) what_1L_chr (character vector length one), Default: ''","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/print_dss.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print datasets — print_dss","text":"dss_kbl (object)","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/print_dvs.html","id":null,"dir":"Reference","previous_headings":"","what":"Print dataverses — print_dvs","title":"Print dataverses — print_dvs","text":"print_dvs() Print function prints output console Specifically, function implements algorithm print dataverses. function called side effects return value.","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/print_dvs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print dataverses — print_dvs","text":"","code":"print_dvs(   dvs_tb,   root_1L_chr = \"https://dataverse.harvard.edu/dataverse/\",   what_1L_chr = \"all\" )"},{"path":"https://ready4-dev.github.io/ready4/reference/print_dvs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print dataverses — print_dvs","text":"dvs_tb Dataverses (tibble) root_1L_chr Root (character vector length one), Default: 'https://dataverse.harvard.edu/dataverse/' what_1L_chr (character vector length one), Default: ''","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/print_dvs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print dataverses — print_dvs","text":"dvs_kbl (object)","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/print_methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Print methods — print_methods","title":"Print methods — print_methods","text":"print_methods() Print function prints output console Specifically, function implements algorithm print methods. function called side effects return value.","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/print_methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print methods — print_methods","text":"","code":"print_methods(   methods_tb = NULL,   exclude_mthds_for_chr = NA_character_,   methods_chr = NULL,   return_1L_chr = \"all\" )"},{"path":"https://ready4-dev.github.io/ready4/reference/print_methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print methods — print_methods","text":"methods_tb Methods (tibble), Default: NULL exclude_mthds_for_chr Exclude methods (character vector), Default: 'NA' methods_chr Methods (character vector), Default: NULL return_1L_chr Return (character vector length one), Default: ''","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/print_methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print methods — print_methods","text":"methods_kbl (object)","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/print_modules.html","id":null,"dir":"Reference","previous_headings":"","what":"Print modules — print_modules","title":"Print modules — print_modules","text":"print_modules() Print function prints output console Specifically, function implements algorithm print modules. function called side effects return value.","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/print_modules.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print modules — print_modules","text":"","code":"print_modules(modules_tb, what_1L_chr = \"All\")"},{"path":"https://ready4-dev.github.io/ready4/reference/print_modules.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print modules — print_modules","text":"modules_tb Modules (tibble) what_1L_chr (character vector length one), Default: ''","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/print_modules.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print modules — print_modules","text":"modules_kbl (object)","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/print_packages.html","id":null,"dir":"Reference","previous_headings":"","what":"Print packages — print_packages","title":"Print packages — print_packages","text":"print_packages() Print function prints output console Specifically, function implements algorithm print packages. function called side effects return value.","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/print_packages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print packages — print_packages","text":"","code":"print_packages(pkg_extensions_tb = NULL)"},{"path":"https://ready4-dev.github.io/ready4/reference/print_packages.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print packages — print_packages","text":"pkg_extensions_tb Package extensions (tibble), Default: NULL","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/print_packages.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print packages — print_packages","text":"pkg_extensions_kbl (object)","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/print_vignettes.html","id":null,"dir":"Reference","previous_headings":"","what":"Print vignettes — print_vignettes","title":"Print vignettes — print_vignettes","text":"print_vignettes() Print function prints output console Specifically, function implements algorithm print vignettes. function called side effects return value.","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/print_vignettes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print vignettes — print_vignettes","text":"","code":"print_vignettes(pkg_extensions_tb = NULL)"},{"path":"https://ready4-dev.github.io/ready4/reference/print_vignettes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print vignettes — print_vignettes","text":"pkg_extensions_tb Package extensions (tibble), Default: NULL","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/print_vignettes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print vignettes — print_vignettes","text":"vignettes_kbl (object)","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/procure-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Procure (get) data — procure","title":"Procure (get) data — procure","text":"procure() method retrieves data contained within object.","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/procure-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Procure (get) data — procure","text":"","code":"procure(x, ...)"},{"path":"https://ready4-dev.github.io/ready4/reference/procure-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Procure (get) data — procure","text":"x object ... Additional arguments","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/procureSlot-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Procure (get) data from a slot — procureSlot","title":"Procure (get) data from a slot — procureSlot","text":"procureSlot() \"getter\" method procures (gets) value specified slot (default behaviour) value returned applying procure method slot. procureSlot method applied Ready4Module","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/procureSlot-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Procure (get) data from a slot — procureSlot","text":"","code":"procureSlot(x, slot_nm_1L_chr, ...)  # S4 method for Ready4Module procureSlot(x, slot_nm_1L_chr, use_procure_mthd_1L_lgl = F, ...)"},{"path":"https://ready4-dev.github.io/ready4/reference/procureSlot-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Procure (get) data from a slot — procureSlot","text":"x object class Ready4Module slot_nm_1L_chr Slot name (length one character vector) ... Additional arguments use_procure_mthd_1L_lgl Use procure method (length one logical vector)","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/procureSlot-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Procure (get) data from a slot — procureSlot","text":"y (object)","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/prognosticate-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Prognosticate (predict) solutions to a forward problem — prognosticate","title":"Prognosticate (predict) solutions to a forward problem — prognosticate","text":"prognosticate() method uses statistical simulation models solve forward problem (.e., given model, calculate expected observed).","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/prognosticate-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prognosticate (predict) solutions to a forward problem — prognosticate","text":"","code":"prognosticate(x, ...)"},{"path":"https://ready4-dev.github.io/ready4/reference/prognosticate-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prognosticate (predict) solutions to a forward problem — prognosticate","text":"x object ... Additional arguments","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/prognosticateSlot-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply the prognosticate method to a slot — prognosticateSlot","title":"Apply the prognosticate method to a slot — prognosticateSlot","text":"prognosticateSlot() convenience method applies prognosticate method specified slot object. prognosticateSlot method applied Ready4Module","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/prognosticateSlot-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply the prognosticate method to a slot — prognosticateSlot","text":"","code":"prognosticateSlot(x, slot_nm_1L_chr, ...)  # S4 method for Ready4Module prognosticateSlot(x, slot_nm_1L_chr, ...)"},{"path":"https://ready4-dev.github.io/ready4/reference/prognosticateSlot-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply the prognosticate method to a slot — prognosticateSlot","text":"x object class Ready4Module slot_nm_1L_chr Slot name (length one character vector) ... Additional arguments","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/ratify-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Ratify (validate) a ready4 framework module / sub-module — ratify","title":"Ratify (validate) a ready4 framework module / sub-module — ratify","text":"ratify() method validates ready4 framework module / sub-module conforms specified criteria, potentially modifying object criteria met.","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/ratify-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ratify (validate) a ready4 framework module / sub-module — ratify","text":"","code":"ratify(x, ...)"},{"path":"https://ready4-dev.github.io/ready4/reference/ratify-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ratify (validate) a ready4 framework module / sub-module — ratify","text":"x object ... Additional arguments","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/ratifySlot-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply the ratify method to a slot — ratifySlot","title":"Apply the ratify method to a slot — ratifySlot","text":"ratifySlot() method validates data slot S4 object conforms specified criteria, potentially modifying data criteria met. ratifySlot method applied Ready4Module","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/ratifySlot-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply the ratify method to a slot — ratifySlot","text":"","code":"ratifySlot(x, slot_nm_1L_chr, ...)  # S4 method for Ready4Module ratifySlot(x, slot_nm_1L_chr, ...)"},{"path":"https://ready4-dev.github.io/ready4/reference/ratifySlot-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply the ratify method to a slot — ratifySlot","text":"x object class Ready4Module slot_nm_1L_chr Slot name (length one character vector) ... Additional arguments","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/ready4-package.html","id":null,"dir":"Reference","previous_headings":"","what":"ready4: Implement Open Science Computational Models of Mental Health Systems — ready4-package","title":"ready4: Implement Open Science Computational Models of Mental Health Systems — ready4-package","text":"ready4 provides bare bones foundational elements (classes, generics, methods, functions) framework ensuring computational model components mental health systems modelling projects adhere open science principles. development version ready4 package made available part process testing documenting package. questions, please contact authors (matthew.hamilton@orygen.org.au).  ready4 provides bare bones foundational elements (classes, generics, methods, functions) framework ensuring computational model components mental health systems modelling projects adhere open science principles. development version ready4 package made available part process testing documenting package. questions, please contact authors (matthew.hamilton@orygen.org.au).","code":""},{"path":[]},{"path":"https://ready4-dev.github.io/ready4/reference/ready4-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"ready4: Implement Open Science Computational Models of Mental Health Systems — ready4-package","text":"Maintainer: Matthew Hamilton matthew.hamilton@orygen.org.au (ORCID) contributors: Orygen [copyright holder, funder] VicHealth [funder] Victoria University [funder] Maintainer: Matthew Hamilton matthew.hamilton@orygen.org.au (ORCID) contributors: Orygen [copyright holder, funder] VicHealth [funder] Victoria University [funder]","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/reckon-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Reckon (calculate) a value — reckon","title":"Reckon (calculate) a value — reckon","text":"reckon() method  performs calculation using data contained ready4 framework module / sub-module.","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/reckon-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reckon (calculate) a value — reckon","text":"","code":"reckon(x, ...)"},{"path":"https://ready4-dev.github.io/ready4/reference/reckon-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reckon (calculate) a value — reckon","text":"x object ... Additional arguments","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/reckonSlot-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply the reckon method to a slot — reckonSlot","title":"Apply the reckon method to a slot — reckonSlot","text":"reckonSlot() convenience method applies reckon method specified slot object. reckonSlot method applied Ready4Module","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/reckonSlot-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply the reckon method to a slot — reckonSlot","text":"","code":"reckonSlot(x, slot_nm_1L_chr, ...)  # S4 method for Ready4Module reckonSlot(x, slot_nm_1L_chr, ...)"},{"path":"https://ready4-dev.github.io/ready4/reference/reckonSlot-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply the reckon method to a slot — reckonSlot","text":"x object class Ready4Module slot_nm_1L_chr Slot name (length one character vector) ... Additional arguments","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/remove_lbls_from_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove labels from dataframe — remove_lbls_from_df","title":"Remove labels from dataframe — remove_lbls_from_df","text":"remove_lbls_from_df() Remove function edits object, removing specified element elements. Specifically, function implements algorithm remove labels dataframe. Function argument data_df specifies object updated. function returns Unlabelled data (data.frame).","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/remove_lbls_from_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove labels from dataframe — remove_lbls_from_df","text":"","code":"remove_lbls_from_df(data_df)"},{"path":"https://ready4-dev.github.io/ready4/reference/remove_lbls_from_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove labels from dataframe — remove_lbls_from_df","text":"data_df Data (data.frame)","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/remove_lbls_from_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove labels from dataframe — remove_lbls_from_df","text":"Unlabelled data (data.frame)","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/renew-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Renew (update) a ready4 framework module / sub-module — renew","title":"Renew (update) a ready4 framework module / sub-module — renew","text":"renew() method updates ready4 framework module / sub-module new values.","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/renew-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Renew (update) a ready4 framework module / sub-module — renew","text":"","code":"renew(x, ...)"},{"path":"https://ready4-dev.github.io/ready4/reference/renew-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Renew (update) a ready4 framework module / sub-module — renew","text":"x object ... Additional arguments","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/renewSlot-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply the renew method to a slot — renewSlot","title":"Apply the renew method to a slot — renewSlot","text":"renewSlot() \"setter\" method renews (sets) value specified slot either supplied new value value returned applying renew method slot (default behaviour). renewSlot method applied Ready4Module","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/renewSlot-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply the renew method to a slot — renewSlot","text":"","code":"renewSlot(x, slot_nm_1L_chr, new_val_xx, ...)  # S4 method for Ready4Module renewSlot(x, slot_nm_1L_chr, new_val_xx = \"use_renew_mthd\", ...)"},{"path":"https://ready4-dev.github.io/ready4/reference/renewSlot-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply the renew method to a slot — renewSlot","text":"x object class Ready4Module slot_nm_1L_chr Slot name (length one character vector) new_val_xx New value (slot dependent object type), Default 'use_renew_mthd' ... Additional arguments","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/rowbind_all_tbs_in_r4_obj.html","id":null,"dir":"Reference","previous_headings":"","what":"Rowbind all tibbles in ready4 S4 object — rowbind_all_tbs_in_r4_obj","title":"Rowbind all tibbles in ready4 S4 object — rowbind_all_tbs_in_r4_obj","text":"rowbind_all_tbs_in_r4_obj() Rowbind function performs custom rowbind operations table objects. Specifically, function implements algorithm rowbind tibbles ready4 s4 object. function returns Tibbles (ready4 S4).","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/rowbind_all_tbs_in_r4_obj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rowbind all tibbles in ready4 S4 object — rowbind_all_tbs_in_r4_obj","text":"","code":"rowbind_all_tbs_in_r4_obj(tbs_r4, second_tbs_r4, r4_name_1L_chr)"},{"path":"https://ready4-dev.github.io/ready4/reference/rowbind_all_tbs_in_r4_obj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rowbind all tibbles in ready4 S4 object — rowbind_all_tbs_in_r4_obj","text":"tbs_r4 Tibbles (ready4 S4) second_tbs_r4 Second tibbles (ready4 S4) r4_name_1L_chr Ready4 S4 name (character vector length one)","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/rowbind_all_tbs_in_r4_obj.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rowbind all tibbles in ready4 S4 object — rowbind_all_tbs_in_r4_obj","text":"Tibbles (ready4 S4)","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/rowbind_tbs_in_r4_obj.html","id":null,"dir":"Reference","previous_headings":"","what":"Rowbind tibbles in ready4 S4 object — rowbind_tbs_in_r4_obj","title":"Rowbind tibbles in ready4 S4 object — rowbind_tbs_in_r4_obj","text":"rowbind_tbs_in_r4_obj() Rowbind function performs custom rowbind operations table objects. Specifically, function implements algorithm rowbind tibbles ready4 s4 object. function returns Tibbles (ready4 S4).","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/rowbind_tbs_in_r4_obj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rowbind tibbles in ready4 S4 object — rowbind_tbs_in_r4_obj","text":"","code":"rowbind_tbs_in_r4_obj(tbs_r4, slot_nm_1L_chr, second_tbs_r4, r4_name_1L_chr)"},{"path":"https://ready4-dev.github.io/ready4/reference/rowbind_tbs_in_r4_obj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rowbind tibbles in ready4 S4 object — rowbind_tbs_in_r4_obj","text":"tbs_r4 Tibbles (ready4 S4) slot_nm_1L_chr Slot name (character vector length one) second_tbs_r4 Second tibbles (ready4 S4) r4_name_1L_chr Ready4 S4 name (character vector length one)","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/rowbind_tbs_in_r4_obj.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rowbind tibbles in ready4 S4 object — rowbind_tbs_in_r4_obj","text":"Tibbles (ready4 S4)","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/share-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Share (publish) open data — share","title":"Share (publish) open data — share","text":"share() method uploads data online repository. requested, method also publish updated repository.","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/share-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Share (publish) open data — share","text":"","code":"share(x, ...)"},{"path":"https://ready4-dev.github.io/ready4/reference/share-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Share (publish) open data — share","text":"x object ... Additional arguments","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/shareSlot-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply the share method to a slot — shareSlot","title":"Apply the share method to a slot — shareSlot","text":"shareSlot() method uploads data contained slot S4 object online repository. requested, method also publish updated repository. shareSlot method applied Ready4Module","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/shareSlot-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply the share method to a slot — shareSlot","text":"","code":"shareSlot(x, slot_nm_1L_chr, ...)  # S4 method for Ready4Module shareSlot(x, slot_nm_1L_chr, ...)"},{"path":"https://ready4-dev.github.io/ready4/reference/shareSlot-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply the share method to a slot — shareSlot","text":"x object class Ready4Module slot_nm_1L_chr Slot name (length one character vector) ... Additional arguments","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/transform_cls_type_ls.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform class type list — transform_cls_type_ls","title":"Transform class type list — transform_cls_type_ls","text":"transform_cls_type_ls() Transform function edits object way core object attributes - e.g. shape, dimensions, elements, type - altered. Specifically, function implements algorithm transform class type list. Function argument cls_type_ls specifies object updated. function returns Tfmd class type (list).","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/transform_cls_type_ls.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform class type list — transform_cls_type_ls","text":"","code":"transform_cls_type_ls(cls_type_ls)"},{"path":"https://ready4-dev.github.io/ready4/reference/transform_cls_type_ls.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform class type list — transform_cls_type_ls","text":"cls_type_ls Class type (list)","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/transform_cls_type_ls.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform class type list — transform_cls_type_ls","text":"Tfmd class type (list)","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/update_pt_fn_args_ls.html","id":null,"dir":"Reference","previous_headings":"","what":"Update prototype function arguments list — update_pt_fn_args_ls","title":"Update prototype function arguments list — update_pt_fn_args_ls","text":"update_pt_fn_args_ls() Update function edits object, preserving core object attributes. Specifically, function implements algorithm update prototype function arguments list. Function argument args_ls specifies object updated. function returns Updated arguments (list).","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/update_pt_fn_args_ls.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update prototype function arguments list — update_pt_fn_args_ls","text":"","code":"update_pt_fn_args_ls(args_ls)"},{"path":"https://ready4-dev.github.io/ready4/reference/update_pt_fn_args_ls.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update prototype function arguments list — update_pt_fn_args_ls","text":"args_ls Arguments (list)","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/update_pt_fn_args_ls.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update prototype function arguments list — update_pt_fn_args_ls","text":"Updated arguments (list)","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/write_all_tbs_in_tbs_r4_to_csvs.html","id":null,"dir":"Reference","previous_headings":"","what":"Write all tibbles in tibbles ready4 S4 to comma separated variables files — write_all_tbs_in_tbs_r4_to_csvs","title":"Write all tibbles in tibbles ready4 S4 to comma separated variables files — write_all_tbs_in_tbs_r4_to_csvs","text":"write_all_tbs_in_tbs_r4_to_csvs() Write function writes file specified local directory. Specifically, function implements algorithm write tibbles tibbles ready4 s4 comma separated variables files. function called side effects return value. WARNING: function writes R scripts local environment. Make sure use want behaviour","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/write_all_tbs_in_tbs_r4_to_csvs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write all tibbles in tibbles ready4 S4 to comma separated variables files — write_all_tbs_in_tbs_r4_to_csvs","text":"","code":"write_all_tbs_in_tbs_r4_to_csvs(   tbs_r4,   r4_name_1L_chr,   lup_dir_1L_chr,   pfx_1L_chr )"},{"path":"https://ready4-dev.github.io/ready4/reference/write_all_tbs_in_tbs_r4_to_csvs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write all tibbles in tibbles ready4 S4 to comma separated variables files — write_all_tbs_in_tbs_r4_to_csvs","text":"tbs_r4 Tibbles (ready4 S4) r4_name_1L_chr Ready4 S4 name (character vector length one) lup_dir_1L_chr Lookup table directory (character vector length one) pfx_1L_chr Prefix (character vector length one)","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/write_dv_fl_to_loc.html","id":null,"dir":"Reference","previous_headings":"","what":"Write dataverse file to local — write_dv_fl_to_loc","title":"Write dataverse file to local — write_dv_fl_to_loc","text":"write_dv_fl_to_loc() Write function writes file specified local directory. Specifically, function implements algorithm write dataverse file local. function called side effects return value. WARNING: function writes R scripts local environment. Make sure use want behaviour","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/write_dv_fl_to_loc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write dataverse file to local — write_dv_fl_to_loc","text":"","code":"write_dv_fl_to_loc(   ds_ui_1L_chr,   fl_nm_1L_chr = NA_character_,   fl_id_1L_int = NA_integer_,   repo_fl_fmt_1L_chr,   key_1L_chr = Sys.getenv(\"DATAVERSE_KEY\"),   server_1L_chr = Sys.getenv(\"DATAVERSE_SERVER\"),   save_type_1L_chr = \"original\",   dest_path_1L_chr,   consent_1L_chr = \"\" )"},{"path":"https://ready4-dev.github.io/ready4/reference/write_dv_fl_to_loc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write dataverse file to local — write_dv_fl_to_loc","text":"ds_ui_1L_chr Dataset user interface (character vector length one) fl_nm_1L_chr File name (character vector length one), Default: 'NA' fl_id_1L_int File identity (integer vector length one), Default: NA repo_fl_fmt_1L_chr Repository file format (character vector length one) key_1L_chr Key (character vector length one), Default: Sys.getenv(\"DATAVERSE_KEY\") server_1L_chr Server (character vector length one), Default: Sys.getenv(\"DATAVERSE_SERVER\") save_type_1L_chr Save type (character vector length one), Default: 'original' dest_path_1L_chr Destination path (character vector length one) consent_1L_chr Consent (character vector length one), Default: ''","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/write_env_objs_to_dv.html","id":null,"dir":"Reference","previous_headings":"","what":"Write environment objects to dataverse — write_env_objs_to_dv","title":"Write environment objects to dataverse — write_env_objs_to_dv","text":"write_env_objs_to_dv() Write function writes file specified local directory. Specifically, function implements algorithm write environment objects dataverse. function returns File identities (integer vector).","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/write_env_objs_to_dv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write environment objects to dataverse — write_env_objs_to_dv","text":"","code":"write_env_objs_to_dv(   env_objects_ls,   descriptions_chr,   ds_url_1L_chr,   key_1L_chr = Sys.getenv(\"DATAVERSE_KEY\"),   publish_dv_1L_lgl = F,   piggyback_desc_1L_chr = \"Documentation\",   piggyback_tag_1L_chr = \"Documentation_0.0\",   piggyback_to_1L_chr = character(0),   prerelease_1L_lgl = T,   server_1L_chr = Sys.getenv(\"DATAVERSE_SERVER\") )"},{"path":"https://ready4-dev.github.io/ready4/reference/write_env_objs_to_dv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write environment objects to dataverse — write_env_objs_to_dv","text":"env_objects_ls Environment objects (list) descriptions_chr Descriptions (character vector) ds_url_1L_chr Dataset url (character vector length one) key_1L_chr Key (character vector length one), Default: Sys.getenv(\"DATAVERSE_KEY\") publish_dv_1L_lgl Publish dataverse (logical vector length one), Default: F piggyback_desc_1L_chr Piggyback description (character vector length one), Default: 'Documentation' piggyback_tag_1L_chr Piggyback tag (character vector length one), Default: 'Documentation_0.0' piggyback_to_1L_chr Piggyback (character vector length one), Default: character(0) prerelease_1L_lgl Prerelease (logical vector length one), Default: T server_1L_chr Server (character vector length one), Default: Sys.getenv(\"DATAVERSE_SERVER\")","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/write_env_objs_to_dv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write environment objects to dataverse — write_env_objs_to_dv","text":"File identities (integer vector)","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/write_fls_from_dv.html","id":null,"dir":"Reference","previous_headings":"","what":"Write files from dataverse — write_fls_from_dv","title":"Write files from dataverse — write_fls_from_dv","text":"write_fls_from_dv() Write function writes file specified local directory. Specifically, function implements algorithm write files dataverse. function called side effects return value. WARNING: function writes R scripts local environment. Make sure use want behaviour","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/write_fls_from_dv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write files from dataverse — write_fls_from_dv","text":"","code":"write_fls_from_dv(   files_tb,   fl_ids_int,   ds_url_1L_chr,   local_dv_dir_1L_chr,   key_1L_chr = Sys.getenv(\"DATAVERSE_KEY\"),   server_1L_chr = Sys.getenv(\"DATAVERSE_SERVER\"),   consent_1L_chr = \"\" )"},{"path":"https://ready4-dev.github.io/ready4/reference/write_fls_from_dv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write files from dataverse — write_fls_from_dv","text":"files_tb Files (tibble) fl_ids_int File identities (integer vector) ds_url_1L_chr Dataset url (character vector length one) local_dv_dir_1L_chr Local dataverse directory (character vector length one) key_1L_chr Key (character vector length one), Default: Sys.getenv(\"DATAVERSE_KEY\") server_1L_chr Server (character vector length one), Default: Sys.getenv(\"DATAVERSE_SERVER\") consent_1L_chr Consent (character vector length one), Default: ''","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/write_fls_to_dv.html","id":null,"dir":"Reference","previous_headings":"","what":"Write files to dataverse — write_fls_to_dv","title":"Write files to dataverse — write_fls_to_dv","text":"write_fls_to_dv() Write function writes file specified local directory. Specifically, function implements algorithm write files dataverse. function returns Identities (integer vector).","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/write_fls_to_dv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write files to dataverse — write_fls_to_dv","text":"","code":"write_fls_to_dv(   file_paths_chr,   descriptions_chr = NULL,   ds_url_1L_chr,   ds_ls = NULL,   key_1L_chr = Sys.getenv(\"DATAVERSE_KEY\"),   server_1L_chr = Sys.getenv(\"DATAVERSE_SERVER\") )"},{"path":"https://ready4-dev.github.io/ready4/reference/write_fls_to_dv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write files to dataverse — write_fls_to_dv","text":"file_paths_chr File paths (character vector) descriptions_chr Descriptions (character vector), Default: NULL ds_url_1L_chr Dataset url (character vector length one) ds_ls Dataset (list), Default: NULL key_1L_chr Key (character vector length one), Default: Sys.getenv(\"DATAVERSE_KEY\") server_1L_chr Server (character vector length one), Default: Sys.getenv(\"DATAVERSE_SERVER\")","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/write_fls_to_dv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write files to dataverse — write_fls_to_dv","text":"Identities (integer vector)","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/write_fls_to_repo.html","id":null,"dir":"Reference","previous_headings":"","what":"Write files to repository — write_fls_to_repo","title":"Write files to repository — write_fls_to_repo","text":"write_fls_to_repo() Write function writes file specified local directory. Specifically, function implements algorithm write files repository. function returns Identities (integer vector).","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/write_fls_to_repo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write files to repository — write_fls_to_repo","text":"","code":"write_fls_to_repo(   paths_chr,   descriptions_chr,   ds_url_1L_chr = character(0),   ds_ls = NULL,   key_1L_chr = Sys.getenv(\"DATAVERSE_KEY\"),   server_1L_chr = Sys.getenv(\"DATAVERSE_SERVER\"),   piggyback_desc_1L_chr = \"Documentation\",   piggyback_tag_1L_chr = \"Documentation_0.0\",   piggyback_to_1L_chr = character(0),   prerelease_1L_lgl = T )"},{"path":"https://ready4-dev.github.io/ready4/reference/write_fls_to_repo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write files to repository — write_fls_to_repo","text":"paths_chr Paths (character vector) descriptions_chr Descriptions (character vector) ds_url_1L_chr Dataset url (character vector length one), Default: character(0) ds_ls Dataset (list), Default: NULL key_1L_chr Key (character vector length one), Default: Sys.getenv(\"DATAVERSE_KEY\") server_1L_chr Server (character vector length one), Default: Sys.getenv(\"DATAVERSE_SERVER\") piggyback_desc_1L_chr Piggyback description (character vector length one), Default: 'Documentation' piggyback_tag_1L_chr Piggyback tag (character vector length one), Default: 'Documentation_0.0' piggyback_to_1L_chr Piggyback (character vector length one), Default: character(0) prerelease_1L_lgl Prerelease (logical vector length one), Default: T","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/write_fls_to_repo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write files to repository — write_fls_to_repo","text":"Identities (integer vector)","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/write_from_tmp.html","id":null,"dir":"Reference","previous_headings":"","what":"Write from temporary — write_from_tmp","title":"Write from temporary — write_from_tmp","text":"write_from_tmp() Write function writes file specified local directory. Specifically, function implements algorithm write temporary. function called side effects return value. WARNING: function writes R scripts local environment. Make sure use want behaviour","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/write_from_tmp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write from temporary — write_from_tmp","text":"","code":"write_from_tmp(   tmp_paths_chr,   dest_paths_chr,   edit_fn_ls = list(NULL),   args_ls_ls = list(NULL) )"},{"path":"https://ready4-dev.github.io/ready4/reference/write_from_tmp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write from temporary — write_from_tmp","text":"tmp_paths_chr Temporary paths (character vector) dest_paths_chr Destination paths (character vector) edit_fn_ls Edit (list functions), Default: list(NULL) args_ls_ls Arguments (list lists), Default: list(NULL)","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/write_new_dirs.html","id":null,"dir":"Reference","previous_headings":"","what":"Write new directories — write_new_dirs","title":"Write new directories — write_new_dirs","text":"write_new_dirs() Write function writes file specified local directory. Specifically, function implements algorithm write new directories. function called side effects return value. WARNING: function writes R scripts local environment. Make sure use want behaviour","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/write_new_dirs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write new directories — write_new_dirs","text":"","code":"write_new_dirs(new_dirs_chr)"},{"path":"https://ready4-dev.github.io/ready4/reference/write_new_dirs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write new directories — write_new_dirs","text":"new_dirs_chr New directories (character vector)","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/write_new_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Write new files — write_new_files","title":"Write new files — write_new_files","text":"write_new_files() Write function writes file specified local directory. Specifically, function implements algorithm write new files. function called side effects return value. WARNING: function writes R scripts local environment. Make sure use want behaviour","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/write_new_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write new files — write_new_files","text":"","code":"write_new_files(   paths_chr,   custom_write_ls = NULL,   fl_nm_1L_chr = NULL,   source_paths_ls = NULL,   text_ls = NULL )"},{"path":"https://ready4-dev.github.io/ready4/reference/write_new_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write new files — write_new_files","text":"paths_chr Paths (character vector) custom_write_ls Custom write (list), Default: NULL fl_nm_1L_chr File name (character vector length one), Default: NULL source_paths_ls Source paths (list), Default: NULL text_ls Text (list), Default: NULL","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/write_tb_to_csv.html","id":null,"dir":"Reference","previous_headings":"","what":"Write tibble to comma separated variables file — write_tb_to_csv","title":"Write tibble to comma separated variables file — write_tb_to_csv","text":"write_tb_to_csv() Write function writes file specified local directory. Specifically, function implements algorithm write tibble comma separated variables file. function called side effects return value. WARNING: function writes R scripts local environment. Make sure use want behaviour","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/write_tb_to_csv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write tibble to comma separated variables file — write_tb_to_csv","text":"","code":"write_tb_to_csv(   tbs_r4,   slot_nm_1L_chr,   r4_name_1L_chr,   lup_dir_1L_chr,   pfx_1L_chr,   consent_1L_chr = \"\" )"},{"path":"https://ready4-dev.github.io/ready4/reference/write_tb_to_csv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write tibble to comma separated variables file — write_tb_to_csv","text":"tbs_r4 Tibbles (ready4 S4) slot_nm_1L_chr Slot name (character vector length one) r4_name_1L_chr Ready4 S4 name (character vector length one) lup_dir_1L_chr Lookup table directory (character vector length one) pfx_1L_chr Prefix (character vector length one) consent_1L_chr Consent (character vector length one), Default: ''","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/write_to_delete_dirs.html","id":null,"dir":"Reference","previous_headings":"","what":"Write to delete directories — write_to_delete_dirs","title":"Write to delete directories — write_to_delete_dirs","text":"write_to_delete_dirs() Write function writes file specified local directory. Specifically, function implements algorithm write delete directories. function called side effects return value. WARNING: function writes R scripts local environment. Make sure use want behaviour","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/write_to_delete_dirs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write to delete directories — write_to_delete_dirs","text":"","code":"write_to_delete_dirs(dir_paths_chr)"},{"path":"https://ready4-dev.github.io/ready4/reference/write_to_delete_dirs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write to delete directories — write_to_delete_dirs","text":"dir_paths_chr Directory paths (character vector)","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/write_to_delete_fls.html","id":null,"dir":"Reference","previous_headings":"","what":"Write to delete files — write_to_delete_fls","title":"Write to delete files — write_to_delete_fls","text":"write_to_delete_fls() Write function writes file specified local directory. Specifically, function implements algorithm write delete files. function called side effects return value. WARNING: function writes R scripts local environment. Make sure use want behaviour","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/write_to_delete_fls.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write to delete files — write_to_delete_fls","text":"","code":"write_to_delete_fls(file_paths_chr)"},{"path":"https://ready4-dev.github.io/ready4/reference/write_to_delete_fls.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write to delete files — write_to_delete_fls","text":"file_paths_chr File paths (character vector)","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/write_to_dv_from_tbl.html","id":null,"dir":"Reference","previous_headings":"","what":"Write to dataverse from table — write_to_dv_from_tbl","title":"Write to dataverse from table — write_to_dv_from_tbl","text":"write_to_dv_from_tbl() Write function writes file specified local directory. Specifically, function implements algorithm write dataverse table. function returns File identities (integer vector).","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/write_to_dv_from_tbl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write to dataverse from table — write_to_dv_from_tbl","text":"","code":"write_to_dv_from_tbl(   files_tb,   data_dir_rt_1L_chr = \".\",   ds_url_1L_chr,   key_1L_chr = Sys.getenv(\"DATAVERSE_KEY\"),   server_1L_chr = Sys.getenv(\"DATAVERSE_SERVER\"),   consent_1L_chr = \"\" )"},{"path":"https://ready4-dev.github.io/ready4/reference/write_to_dv_from_tbl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write to dataverse from table — write_to_dv_from_tbl","text":"files_tb Files (tibble) data_dir_rt_1L_chr Data directory root (character vector length one), Default: '.' ds_url_1L_chr Dataset url (character vector length one) key_1L_chr Key (character vector length one), Default: Sys.getenv(\"DATAVERSE_KEY\") server_1L_chr Server (character vector length one), Default: Sys.getenv(\"DATAVERSE_SERVER\") consent_1L_chr Consent (character vector length one), Default: ''","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/write_to_dv_from_tbl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write to dataverse from table — write_to_dv_from_tbl","text":"File identities (integer vector)","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/write_to_dv_with_wait.html","id":null,"dir":"Reference","previous_headings":"","what":"Write to dataverse with wait — write_to_dv_with_wait","title":"Write to dataverse with wait — write_to_dv_with_wait","text":"write_to_dv_with_wait() Write function writes file specified local directory. Specifically, function implements algorithm write dataverse wait. function returns Dataset (list).","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/write_to_dv_with_wait.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write to dataverse with wait — write_to_dv_with_wait","text":"","code":"write_to_dv_with_wait(   dss_tb,   dv_nm_1L_chr,   ds_url_1L_chr,   wait_time_in_secs_int = 5L,   make_local_copy_1L_lgl = F,   parent_dv_dir_1L_chr,   paths_to_dirs_chr,   paths_are_rltv_1L_lgl = T,   inc_fl_types_chr = NA_character_,   key_1L_chr = Sys.getenv(\"DATAVERSE_KEY\"),   server_1L_chr = Sys.getenv(\"DATAVERSE_SERVER\"),   consent_1L_chr = \"\" )"},{"path":"https://ready4-dev.github.io/ready4/reference/write_to_dv_with_wait.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write to dataverse with wait — write_to_dv_with_wait","text":"dss_tb Datasets (tibble) dv_nm_1L_chr Dataverse name (character vector length one) ds_url_1L_chr Dataset url (character vector length one) wait_time_in_secs_int Wait time secs (integer vector), Default: 5 make_local_copy_1L_lgl Make local copy (logical vector length one), Default: F parent_dv_dir_1L_chr Parent dataverse directory (character vector length one) paths_to_dirs_chr Paths directories (character vector) paths_are_rltv_1L_lgl Paths relative (logical vector length one), Default: T inc_fl_types_chr Include file types (character vector), Default: 'NA' key_1L_chr Key (character vector length one), Default: Sys.getenv(\"DATAVERSE_KEY\") server_1L_chr Server (character vector length one), Default: Sys.getenv(\"DATAVERSE_SERVER\") consent_1L_chr Consent (character vector length one), Default: ''","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/write_to_dv_with_wait.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write to dataverse with wait — write_to_dv_with_wait","text":"Dataset (list)","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/write_to_publish_dv_ds.html","id":null,"dir":"Reference","previous_headings":"","what":"Write to publish dataverse dataset — write_to_publish_dv_ds","title":"Write to publish dataverse dataset — write_to_publish_dv_ds","text":"write_to_publish_dv_ds() Write function writes file specified local directory. Specifically, function implements algorithm write publish dataverse dataset. function called side effects return value. WARNING: function writes R scripts local environment. Make sure use want behaviour","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/write_to_publish_dv_ds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write to publish dataverse dataset — write_to_publish_dv_ds","text":"","code":"write_to_publish_dv_ds(dv_ds_1L_chr)"},{"path":"https://ready4-dev.github.io/ready4/reference/write_to_publish_dv_ds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write to publish dataverse dataset — write_to_publish_dv_ds","text":"dv_ds_1L_chr Dataverse dataset (character vector length one)","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/write_ws.html","id":null,"dir":"Reference","previous_headings":"","what":"Write workspace — write_ws","title":"Write workspace — write_ws","text":"write_ws() Write function writes file specified local directory. Specifically, function implements algorithm write workspace. function called side effects return value. WARNING: function writes R scripts local environment. Make sure use want behaviour","code":""},{"path":"https://ready4-dev.github.io/ready4/reference/write_ws.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write workspace — write_ws","text":"","code":"write_ws(path_1L_chr)"},{"path":"https://ready4-dev.github.io/ready4/reference/write_ws.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write workspace — write_ws","text":"path_1L_chr Path (character vector length one)","code":""}]
